//
//  RealTest.cpp
//  ProjectEuler
//
//  Created by Miraslau Parafeniuk on 20.03.22.
//  Copyright Â© 2022 Miraslau Parafeniuk. All rights reserved.
//

#include "RealTest.hpp"

#include <iostream>
#include <fstream>
#include <set>
#include <vector>
#include <deque>
#include <map>
#include <algorithm>
#include <time.h>
#include <math.h>
#include <string>
using namespace std;

namespace RealTest
{

vector<string> vPrev,vCur;
vector<pair<__int16_t, __int16_t> >s1,s2;
int vCurCnt = 0;
int elemCost[840][10768];
char itochar[50] = {0};
int iicache[50] = {0};
void fillCur(int mmv)
{
    for (int i=1;i<mmv;i++)
    {
        itochar[i] = char(i > 9 ? i - 10 + 'A' : i + '0');
        iicache[i] = i*i;
    }


    for (int j=0;j<(int)vPrev.size();j++)
    {
        int sum=s1[j].first,sum2=s1[j].second;
        for (int i=1;i<mmv;i++)
        {
            char c = itochar[i];
            int ii = i*i;
            if (elemCost[sum + i][sum2+ii] == 120)
            {
                string s = vPrev[j];
                string::iterator its = lower_bound(s.begin(),s.end(),c);
                s.insert(its,c);
                elemCost[sum + i][sum2+ii] = (int)s.length();
                if (vCurCnt < (int)vCur.size())
                  vCur[vCurCnt].swap(s);
                else
                  vCur.push_back(s);
                ++vCurCnt;

                s2.push_back(make_pair(sum + i,sum2+i*i));
            }
        }
    }
}
char patcur[50];
int patbuf[50];
vector<string> v;
vector<string> pv;

string patbufs(int len)
{
    char pb[50];
    char *pr = pb;
    for (int i=0;i<len;i++)
    {
        int pos = i;
        for (int i=0;i<abs(patbuf[pos]);i++)
            *pr++ = char(pos > 9 ? pos - 10 + 'A' : pos + '0');
        if (patbuf[pos] < 0)
            *pr++ = '*';
    }
    *pr++ = 0;
    return pb;
}

bool checkPat(char *pr, int pos, int len, int sum)
{
    if (pos == len)
    {
        *pr++ = 0;
        if (!binary_search(v.begin(),v.end(),string(patcur)))
            return false;
        return true;
    }

    for (int i=0;i< (patbuf[pos] < 0 ?abs(patbuf[pos]+1) : patbuf[pos]);i++)
        *pr++ = char(pos > 9 ? pos - 10 + 'A' : pos + '0');
    if (patbuf[pos] >= 0)
        return checkPat(pr,pos+1,len,sum);
    for (int i=0;i<=sum;i++)
    {
        if (!checkPat(pr,pos+1,len,sum-i))
            return false;
        *pr++ = char(pos > 9 ? pos - 10 + 'A' : pos + '0');
    }
    return true;
}

void fillPat(int pos, int len, int sum, int cs, int minS, int maxS)
{
    if (maxS < 0)
        return;
    if (pos == len)
    {
        if (minS > 0)
            return;
        if (checkPat(patcur,0,len,cs))
        {
            string s = patbufs(len);
            pv.push_back(s);
        }
        return;
    }
    for (int i=/*-sum*/-1;i<=sum;i++)
    {
        patbuf[pos] = i;
        fillPat(pos+1,len,sum - (i<0 ? abs(i+1) : i), cs - (i<0 ? abs(i+1) : i), minS - (i<0? 1 : 0), maxS - (i<0?1:0) );
    }
}


inline bool fullMatch(const string& a, const string& b)
{
    if (a.size() > 1 && b.size() > 0 && a[1] != '*' && a[0] != b[0])
        return false;
    int cnt1[40] = {0},cnt2[40] = {0};
    for (int i=0;i<(int)a.length();i++)
    {
        if (a[i] == '*')
            if (a[i-1] >= 'A')
                cnt1[a[i-1]- 'A' + 10] = -cnt1[a[i-1]- 'A' + 10];
            else
                cnt1[a[i-1]- '0'] = -cnt1[a[i-1]- '0'];
        else
            if (a[i] >= 'A')
                ++cnt1[a[i]- 'A' + 10];
            else
                ++cnt1[a[i]- '0'];

    }
    for (int i=0;i<(int)b.length();i++)
    {
        if (b[i] == '*')
            if (b[i-1] >= 'A')
                cnt2[b[i-1]- 'A' + 10] = -cnt2[b[i-1]- 'A' + 10];
            else
                cnt2[b[i-1]- '0'] = -cnt2[b[i-1]- '0'];
        else
            if (b[i] >= 'A')
                ++cnt2[b[i]- 'A' + 10];
            else
                ++cnt2[b[i]- '0'];
    }
    for (int i=0;i<37;i++)
        if (cnt1[i] != cnt2[i] && cnt1[i] >= 0 || -cnt1[i]-1 > abs(cnt2[i]))
            return false;

    return true;
}

void clearPat(vector<string> & pv)
{
    vector<string> pv2;
    for (int i=(int)pv.size() - 1;i >= 0;i--)
    {
        while (pv2.size() && fullMatch(pv[i],pv2.back()))
            pv2.pop_back();
        pv2.push_back(pv[i]);
        for (int j=i - 1;j >= 0;j--)
        {
            if (i != j)
            {
                if(!fullMatch(pv[i],pv[j]))
                {
                    i = j + 1;
                    break;
                }
            }
            if (j == 0)
                i = 0;
        }
    }
    pv.swap(pv2);
    pv2.clear();

    set<string> s;
    for (int i=0;i<(int)pv.size();i++)
        s.insert(pv[i]);
    for (int i=0;i<(int)pv.size();i++)
    {
        int r = 0, r2 = 0;
        if ((r = pv[i].find('*')) != -1)
        {
            if (1)
            {
                string s2 = pv[i];
                char c1 = s2[r-1];
                s2.erase( r - 1, 2);
                s.erase(s2);
                for (int k = 0;k<10;k++)
                {
                    s.erase(s2);
                    s2.insert(s2.begin() + (r-1),c1);
                }
            }
            if ((r2 = pv[i].find('*', r+1)) != -1)
            {
                string s1 = pv[i];
                char c1 = s1[r-1];
                char c2 = s1[r2-1];
                s1.erase(r2 - 1, 2);
                s.erase(s1);
                s1.erase( r - 1, 2);
                for (int j = 0;j<10;j++)
                {
                    string s2 = s1;
                    for (int k = 0;k<10 && s2.length() < 11;k++)
                    {
                        s.erase(s2);
                        s2.insert(s2.begin() + (r2+j-3),c2);
                    }
                    s1.insert(s1.begin() + (r-1),c1);
                }
            }
        }
    }
    pv.resize(s.size());
    int pos = 0;
    for (set<string>::iterator it = s.begin(); it != s.end(); it++)
        pv[pos++] = *it;
    s.clear();

}
string s16[] = {"1ACDE*FFFFF"};
string s17[] = {"1ACDE*FFFFF","2BDEF*GGGGG"};
string s18[] = {"1ACDE*FFFFF","2BDEF*GGGGG","3CEFG*HHHHH"};
string s19[] = {"1ACDE*FFFFF","1CFGGH*IIII","1CGGH*IIIII","2BDEF*GGGGG","3CEFG*HHHHH","4DFGH*IIIII"};
string s20[] = {"111111DJJJJ","1ACDE*FFFFF","1CFGGH*IIII","1CGGH*IIIII","1DGHHI*JJJJ","1DGHHI*JJJJJ","1DGHI*JJJJJ","2BDEF*GGGGG","2DGHHI*JJJJ","2DHHI*JJJJJ","3CEFG*HHHHH","4DFGH*IIIII","5EGHI*JJJJJ"};
string s21[] = {"12JJJJJJJK*","1ACDE*FFFFF","1CFGGH*IIII","1CGGH*IIIII","1DGHHI*JJJJ","1DGHHI*JJJJJ","1DGHI*JJJJJ","1EHIIJ*KKKK","1EHIIJ*KKKKK","1EHIIJ*KKKKKK","1EHIJ*KKKKK","1EHIJ*KKKKKK","2BDEF*GGGGG","2DGHHI*JJJJ","2DHHI*JJJJJ","2EHIIJ*KKKK","2EHIIJ*KKKKK","2EHIJ*KKKKK","3CEFG*HHHHH","3EHIIJ*KKKK","3EIIJ*KKKKK","4DFGH*IIIII","5EGHI*JJJJJ","6FHIJ*KKKKK"};
string s22[] = {"11111111KKL*","11111111KL*","1111111KKL*","111111FLLLL","111111KKKL*","111KKKKKKL*","11KKKKKKKKL*","11KKKKKKKL*","1ACDE*FFFFF","1CFGGH*IIII","1CGGH*IIIII","1DGHHI*JJJJ","1DGHHI*JJJJJ","1DGHI*JJJJJ","1EHIIJ*KKKK","1EHIIJ*KKKKK","1EHIIJ*KKKKKK","1EHIJ*KKKKK","1EHIJ*KKKKKK","1FIJJK*LLLL","1FIJJK*LLLLL","1FIJJK*LLLLLL","1FIJJK*LLLLLLL","1GGKKLLLLLL","2BDEF*GGGGG","2DGHHI*JJJJ","2DHHI*JJJJJ","2EHIIJ*KKKK","2EHIIJ*KKKKK","2EHIJ*KKKKK","2FIJJK*LLLL","2FIJJK*LLLLL","2FIJJK*LLLLLL","2FIJK*LLLLL","2FIJK*LLLLLL","3CEFG*HHHHH","3EHIIJ*KKKK","3EIIJ*KKKKK","3FIJJK*LLLL","3FIJJK*LLLLL","3FIJK*LLLLL","4DFGH*IIIII","4FIJJK*LLLL","4FJJK*LLLLL","5EGHI*JJJJJ","6FHIJ*KKKKK","7GIJK*LLLLL"};
string s23[] = {"122LLLLLLM*","12KLLLLLLM*","1ACDE*FFFFF","1CFGGH*IIII","1CGGH*IIIII","1DGHHI*JJJJ","1DGHHI*JJJJJ","1DGHI*JJJJJ","1EHIIJ*KKKK","1EHIIJ*KKKKK","1EHIIJ*KKKKKK","1EHIJ*KKKKK","1EHIJ*KKKKKK","1FIJJK*LLLL","1FIJJK*LLLLL","1FIJJK*LLLLLL","1FIJJK*LLLLLLL","1FIJKKLLLLM","2BDEF*GGGGG","2DGHHI*JJJJ","2DHHI*JJJJJ","2EHIIJ*KKKK","2EHIIJ*KKKKK","2EHIJ*KKKKK","2FIJJK*LLLL","2FIJJK*LLLLL","2FIJJK*LLLLLL","2FIJK*LLLLL","2FIJK*LLLLLL","2GJKKL*MMMM","2GJKKL*MMMMM","2GJKKL*MMMMMM","2GJKKL*MMMMMMM","2HHLLMMMMMM","3CEFG*HHHHH","3EHIIJ*KKKK","3EIIJ*KKKKK","3FIJJK*LLLL","3FIJJK*LLLLL","3FIJK*LLLLL","3GJKKL*MMMM","3GJKKL*MMMMM","3GJKKL*MMMMMM","3GJKL*MMMMM","3GJKL*MMMMMM","4DFGH*IIIII","4FIJJK*LLLL","4FJJK*LLLLL","4GJKKL*MMMM","4GJKKL*MMMMM","4GJKL*MMMMM","5EGHI*JJJJJ","5GJKKL*MMMM","5GKKL*MMMMM","6FHIJ*KKKKK","7GIJK*LLLLL","8HJKL*MMMMM","1GJKKL*M*"};
string s24[] = {"111111HNNNN","11111MMMMN*","1111MMMMMMN*","1111MMMMMN*","1112MMMMMMN*","1112MMMMMN*","111MMMMMMN*","112MMMMMMN*","11MMMMMMMMMN*","11MMMMMMMMN*","11MMMMMMMN*","12MMMMMMMMN*","12MMMMMMMN*","1ACDE*FFFFF","1CFGGH*IIII","1CGGH*IIIII","1DGHHI*JJJJ","1DGHHI*JJJJJ","1DGHI*JJJJJ","1EHIIJ*KKKK","1EHIIJ*KKKKK","1EHIIJ*KKKKKK","1EHIJ*KKKKK","1EHIJ*KKKKKK","1FIJJK*LLLL","1FIJJK*LLLLL","1FIJJK*LLLLLL","1FIJJK*LLLLLLL","1FIJKKLLLLM","1GKLLM*NNNN","1GLLM*NNNNN","2BDEF*GGGGG","2DGHHI*JJJJ","2DHHI*JJJJJ","2EHIIJ*KKKK","2EHIIJ*KKKKK","2EHIJ*KKKKK","2FIJJK*LLLL","2FIJJK*LLLLL","2FIJJK*LLLLLL","2FIJK*LLLLL","2FIJK*LLLLLL","2GJKKL*MMMM","2GJKKL*MMMMM","2GJKKL*MMMMMM","2GJKKL*MMMMMMM","2GJKLLMMMMN","3CEFG*HHHHH","3EHIIJ*KKKK","3EIIJ*KKKKK","3FIJJK*LLLL","3FIJJK*LLLLL","3FIJK*LLLLL","3GJKKL*MMMM","3GJKKL*MMMMM","3GJKKL*MMMMMM","3GJKL*MMMMM","3GJKL*MMMMMM","3HKLLM*NNNN","3HKLLM*NNNNN","3HKLLM*NNNNNN","3HKLLM*NNNNNNN","3IIMMNNNNNN","4DFGH*IIIII","4FIJJK*LLLL","4FJJK*LLLLL","4GJKKL*MMMM","4GJKKL*MMMMM","4GJKL*MMMMM","4HKLLM*NNNN","4HKLLM*NNNNN","4HKLLM*NNNNNN","4HKLM*NNNNN","4HKLM*NNNNNN","5EGHI*JJJJJ","5GJKKL*MMMM","5GKKL*MMMMM","5HKLLM*NNNN","5HKLLM*NNNNN","5HKLM*NNNNN","6FHIJ*KKKKK","6HKLLM*NNNN","6HLLM*NNNNN","7GIJK*LLLLL","8HJKL*MMMMM","9IKLM*NNNNN","1GJKKL*M*","1HKLLM*N*","2HKLLM*N*"};
string s25[] = {"1111111NNO*","111111IOOOO","11111NNNNNO*","11111NNNNO*","1111NNNNNO*","1112NNNNNO*","112NNNNNNNO*","112NNNNNNO*","11NNNNNNNNO*","11NNNNNNNO*","12MNNNNNNNO*","12MNNNNNNO*","12NNNNNNNO*","13MNNNNNNO*","14NNNNNNNNO*","14NNNNNNNO*","1ACDE*FFFFF","1CFGGH*IIII","1CGGH*IIIII","1DGHHI*JJJJ","1DGHHI*JJJJJ","1DGHI*JJJJJ","1EHIIJ*KKKK","1EHIIJ*KKKKK","1EHIIJ*KKKKKK","1EHIJ*KKKKK","1EHIJ*KKKKKK","1FIJJK*LLLL","1FIJJK*LLLLL","1FIJJK*LLLLLL","1FIJJK*LLLLLLL","1FIJKKLLLLM","1GKLLM*NNNN","1GLLM*NNNNN","1HLMMN*OOOO","1HLMMN*OOOOO","1HLMN*OOOOO","1HMMN*OOOOO","1HMMN*OOOOOO","2BDEF*GGGGG","2DGHHI*JJJJ","2DHHI*JJJJJ","2EHIIJ*KKKK","2EHIIJ*KKKKK","2EHIJ*KKKKK","2FIJJK*LLLL","2FIJJK*LLLLL","2FIJJK*LLLLLL","2FIJK*LLLLL","2FIJK*LLLLLL","2GJKKL*MMMM","2GJKKL*MMMMM","2GJKKL*MMMMMM","2GJKKL*MMMMMMM","2GJKLLMMMMN","2HLMMN*OOOO","2HMMN*OOOOO","3CEFG*HHHHH","3EHIIJ*KKKK","3EIIJ*KKKKK","3FIJJK*LLLL","3FIJJK*LLLLL","3FIJK*LLLLL","3GJKKL*MMMM","3GJKKL*MMMMM","3GJKKL*MMMMMM","3GJKL*MMMMM","3GJKL*MMMMMM","3HKLLM*NNNN","3HKLLM*NNNNN","3HKLLM*NNNNNN","3HKLLM*NNNNNNN","3HKLMMNNNNO","4DFGH*IIIII","4FIJJK*LLLL","4FJJK*LLLLL","4GJKKL*MMMM","4GJKKL*MMMMM","4GJKL*MMMMM","4HKLLM*NNNN","4HKLLM*NNNNN","4HKLLM*NNNNNN","4HKLM*NNNNN","4HKLM*NNNNNN","4ILMMN*OOOO","4ILMMN*OOOOO","4ILMMN*OOOOOO","4ILMMN*OOOOOOO","4JJNNOOOOOO","5EGHI*JJJJJ","5GJKKL*MMMM","5GKKL*MMMMM","5HKLLM*NNNN","5HKLLM*NNNNN","5HKLM*NNNNN","5ILMMN*OOOO","5ILMMN*OOOOO","5ILMMN*OOOOOO","5ILMN*OOOOO","5ILMN*OOOOOO","6FHIJ*KKKKK","6HKLLM*NNNN","6HLLM*NNNNN","6ILMMN*OOOO","6ILMMN*OOOOO","6ILMN*OOOOO","7GIJK*LLLLL","7ILMMN*OOOO","7IMMN*OOOOO","8HJKL*MMMMM","9IKLM*NNNNN","AJLMN*OOOOO","1GJKKL*M*","1HKLLM*N*","1ILMMN*O*","2HKLLM*N*","2ILMMN*O*","3ILMMN*O*"};
string s26[] = {"111111JPPPP","1111122OOP*","111112OOOP*","11111OOOOOP*","11111OOOOP*","111122OOOP*","1111OOOOOP*","12NOOOOOOP*","12OOOOOOOOOP*","12OOOOOOOOP*","12OOOOOOOP*","13NNOOOOOP*","15NOOOOOOP*","1ACDE*FFFFF","1CFGGH*IIII","1CGGH*IIIII","1DGHHI*JJJJ","1DGHHI*JJJJJ","1DGHI*JJJJJ","1EHIIJ*KKKK","1EHIIJ*KKKKK","1EHIIJ*KKKKKK","1EHIJ*KKKKK","1EHIJ*KKKKKK","1FIJJK*LLLL","1FIJJK*LLLLL","1FIJJK*LLLLLL","1FIJJK*LLLLLLL","1FIJKKLLLLM","1GKLLM*NNNN","1GLLM*NNNNN","1HLMMN*OOOO","1HLMMN*OOOOO","1HLMN*OOOOO","1HMMN*OOOOO","1HMMN*OOOOOO","1IMNNO*PPPP","1IMNNO*PPPPP","1IMNNO*PPPPPP","1IMNO*PPPPP","1IMNO*PPPPPP","1IMO*PPPPPP","23NOOOOOOP*","2BDEF*GGGGG","2DGHHI*JJJJ","2DHHI*JJJJJ","2EHIIJ*KKKK","2EHIIJ*KKKKK","2EHIJ*KKKKK","2FIJJK*LLLL","2FIJJK*LLLLL","2FIJJK*LLLLLL","2FIJK*LLLLL","2FIJK*LLLLLL","2GJKKL*MMMM","2GJKKL*MMMMM","2GJKKL*MMMMMM","2GJKKL*MMMMMMM","2GJKLLMMMMN","2HLMMN*OOOO","2HMMN*OOOOO","2IMNNO*PPPP","2IMNNO*PPPPP","2IMNO*PPPPP","2INNO*PPPPP","2INNO*PPPPPP","3CEFG*HHHHH","3EHIIJ*KKKK","3EIIJ*KKKKK","3FIJJK*LLLL","3FIJJK*LLLLL","3FIJK*LLLLL","3GJKKL*MMMM","3GJKKL*MMMMM","3GJKKL*MMMMMM","3GJKL*MMMMM","3GJKL*MMMMMM","3HKLLM*NNNN","3HKLLM*NNNNN","3HKLLM*NNNNNN","3HKLLM*NNNNNNN","3HKLMMNNNNO","3IMNNO*PPPP","3INNO*PPPPP","4DFGH*IIIII","4FIJJK*LLLL","4FJJK*LLLLL","4GJKKL*MMMM","4GJKKL*MMMMM","4GJKL*MMMMM","4HKLLM*NNNN","4HKLLM*NNNNN","4HKLLM*NNNNNN","4HKLM*NNNNN","4HKLM*NNNNNN","4ILMMN*OOOO","4ILMMN*OOOOO","4ILMMN*OOOOOO","4ILMMN*OOOOOOO","4ILMNNOOOOP","5EGHI*JJJJJ","5GJKKL*MMMM","5GKKL*MMMMM","5HKLLM*NNNN","5HKLLM*NNNNN","5HKLM*NNNNN","5ILMMN*OOOO","5ILMMN*OOOOO","5ILMMN*OOOOOO","5ILMN*OOOOO","5ILMN*OOOOOO","5JMNNO*PPPP","5JMNNO*PPPPP","5JMNNO*PPPPPP","5JMNNO*PPPPPPP","5KKOOPPPPPP","6FHIJ*KKKKK","6HKLLM*NNNN","6HLLM*NNNNN","6ILMMN*OOOO","6ILMMN*OOOOO","6ILMN*OOOOO","6JMNNO*PPPP","6JMNNO*PPPPP","6JMNNO*PPPPPP","6JMNO*PPPPP","6JMNO*PPPPPP","7GIJK*LLLLL","7ILMMN*OOOO","7IMMN*OOOOO","7JMNNO*PPPP","7JMNNO*PPPPP","7JMNO*PPPPP","8HJKL*MMMMM","8JMNNO*PPPP","8JNNO*PPPPP","9IKLM*NNNNN","AJLMN*OOOOO","BKMNO*PPPPP","1GJKKL*M*","1HKLLM*N*","1ILMMN*O*","1JMNNO*P*","2HKLLM*N*","2ILMMN*O*","2JMNNO*P*","3ILMMN*O*","3JMNNO*P*","4JMNNO*P*"};
string s27[] = {"111111111Q*","111111112Q*","11111111PQ*","11111112PQ*","1111111PPPQ*","1111111PPQ*","111111KQQQQ","111111PPPQ*","111112PPPQ*","11112PPPPQ*","1112PPPPPQ*","111PPPPPPPQ*","111PPPPPPQ*","112PPPPPPQ*","11PPPPPPPQ*","123PPPPPPQ*","12PPPPPPPPQ*","12PPPPPPPQ*","13OPPPPPPPQ*","13OPPPPPPQ*","13PPPPPPPQ*","14NPPPPPPQ*","15PPPPPPPPQ*","15PPPPPPPQ*","1ACDE*FFFFF","1CFGGH*IIII","1CGGH*IIIII","1DGHHI*JJJJ","1DGHHI*JJJJJ","1DGHI*JJJJJ","1EHIIJ*KKKK","1EHIIJ*KKKKK","1EHIIJ*KKKKKK","1EHIJ*KKKKK","1EHIJ*KKKKKK","1FIJJK*LLLL","1FIJJK*LLLLL","1FIJJK*LLLLLL","1FIJJK*LLLLLLL","1FIJKKLLLLM","1GKLLM*NNNN","1GLLM*NNNNN","1HLMMN*OOOO","1HLMMN*OOOOO","1HLMN*OOOOO","1HMMN*OOOOO","1HMMN*OOOOOO","1IMNNO*PPPP","1IMNNO*PPPPP","1IMNNO*PPPPPP","1IMNO*PPPPP","1IMNO*PPPPPP","1IMO*PPPPPP","1JNOOP*QQQQ","1JNOOP*QQQQQ","1JNOOP*QQQQQQ","1JNOOP*QQQQQQQ","1JNOP*QQQQQ","1JNOP*QQQQQQ","1JNOP*QQQQQQQ","1KLOQQQQQQQ","23PPPPPPPPQ*","23PPPPPPPQ*","2BDEF*GGGGG","2DGHHI*JJJJ","2DHHI*JJJJJ","2EHIIJ*KKKK","2EHIIJ*KKKKK","2EHIJ*KKKKK","2FIJJK*LLLL","2FIJJK*LLLLL","2FIJJK*LLLLLL","2FIJK*LLLLL","2FIJK*LLLLLL","2GJKKL*MMMM","2GJKKL*MMMMM","2GJKKL*MMMMMM","2GJKKL*MMMMMMM","2GJKLLMMMMN","2HLMMN*OOOO","2HMMN*OOOOO","2IMNNO*PPPP","2IMNNO*PPPPP","2IMNO*PPPPP","2INNO*PPPPP","2INNO*PPPPPP","2JNOOP*QQQQ","2JNOOP*QQQQQ","2JNOOP*QQQQQQ","2JNOP*QQQQQ","2JNOP*QQQQQQ","2JNP*QQQQQQ","3CEFG*HHHHH","3EHIIJ*KKKK","3EIIJ*KKKKK","3FIJJK*LLLL","3FIJJK*LLLLL","3FIJK*LLLLL","3GJKKL*MMMM","3GJKKL*MMMMM","3GJKKL*MMMMMM","3GJKL*MMMMM","3GJKL*MMMMMM","3HKLLM*NNNN","3HKLLM*NNNNN","3HKLLM*NNNNNN","3HKLLM*NNNNNNN","3HKLMMNNNNO","3IMNNO*PPPP","3INNO*PPPPP","3JNOOP*QQQQ","3JNOOP*QQQQQ","3JNOP*QQQQQ","3JOOP*QQQQQ","3JOOP*QQQQQQ","4DFGH*IIIII","4FIJJK*LLLL","4FJJK*LLLLL","4GJKKL*MMMM","4GJKKL*MMMMM","4GJKL*MMMMM","4HKLLM*NNNN","4HKLLM*NNNNN","4HKLLM*NNNNNN","4HKLM*NNNNN","4HKLM*NNNNNN","4ILMMN*OOOO","4ILMMN*OOOOO","4ILMMN*OOOOOO","4ILMMN*OOOOOOO","4ILMNNOOOOP","4JNOOP*QQQQ","4JOOP*QQQQQ","5EGHI*JJJJJ","5GJKKL*MMMM","5GKKL*MMMMM","5HKLLM*NNNN","5HKLLM*NNNNN","5HKLM*NNNNN","5ILMMN*OOOO","5ILMMN*OOOOO","5ILMMN*OOOOOO","5ILMN*OOOOO","5ILMN*OOOOOO","5JMNNO*PPPP","5JMNNO*PPPPP","5JMNNO*PPPPPP","5JMNNO*PPPPPPP","5JMNOOPPPPQ","6FHIJ*KKKKK","6HKLLM*NNNN","6HLLM*NNNNN","6ILMMN*OOOO","6ILMMN*OOOOO","6ILMN*OOOOO","6JMNNO*PPPP","6JMNNO*PPPPP","6JMNNO*PPPPPP","6JMNO*PPPPP","6JMNO*PPPPPP","6KNOOP*QQQQ","6KNOOP*QQQQQ","6KNOOP*QQQQQQ","6KNOOP*QQQQQQQ","6LLPPQQQQQQ","7GIJK*LLLLL","7ILMMN*OOOO","7IMMN*OOOOO","7JMNNO*PPPP","7JMNNO*PPPPP","7JMNO*PPPPP","7KNOOP*QQQQ","7KNOOP*QQQQQ","7KNOOP*QQQQQQ","7KNOP*QQQQQ","7KNOP*QQQQQQ","8HJKL*MMMMM","8JMNNO*PPPP","8JNNO*PPPPP","8KNOOP*QQQQ","8KNOOP*QQQQQ","8KNOP*QQQQQ","9IKLM*NNNNN","9KNOOP*QQQQ","9KOOP*QQQQQ","AJLMN*OOOOO","BKMNO*PPPPP","CLNOP*QQQQQ","1GJKKL*M*","1HKLLM*N*","1ILMMN*O*","1JMNNO*P*","1KNOOP*Q*","2HKLLM*N*","2ILMMN*O*","2JMNNO*P*","2KNOOP*Q*","3ILMMN*O*","3JMNNO*P*","3KNOOP*Q*","4JMNNO*P*","4KNOOP*Q*","5KNOOP*Q*"};
string s28[] = {"1111111111R","1111111111RR","111111111QQR*","111111111QR*","111111111R*","11111111QQQR*","11111111QQR*","11111111QR*","11111112QR*","1111111QQQR*","1111111QQR*","1111112QQR*","111111LRRRR","111111QQQQR*","111111QQQR*","11111QQQQQR*","11111QQQQR*","1111QQQQQQR*","1111QQQQQR*","1112QQQQQR*","111ERRRRRRR","111ERRRRRRRR","111QQQQQQQQR*","111QQQQQQQR*","111QQQQQQR*","113QQQQQQQR*","113QQQQQQR*","11QQQQQQQQQR*","11QQQQQQQQR*","11QQQQQQQR*","13PQQQQQQR*","13QQQQQQQQQR*","13QQQQQQQQR*","13QQQQQQQR*","14PPQQQQQR*","14QQQQQQQQR*","14QQQQQQQR*","16PQQQQQQR*","1ACDE*FFFFF","1CFGGH*IIII","1CGGH*IIIII","1DGHHI*JJJJ","1DGHHI*JJJJJ","1DGHI*JJJJJ","1EHIIJ*KKKK","1EHIIJ*KKKKK","1EHIIJ*KKKKKK","1EHIJ*KKKKK","1EHIJ*KKKKKK","1FIJJK*LLLL","1FIJJK*LLLLL","1FIJJK*LLLLLL","1FIJJK*LLLLLLL","1FIJKKLLLLM","1GKLLM*NNNN","1GLLM*NNNNN","1HLMMN*OOOO","1HLMMN*OOOOO","1HLMN*OOOOO","1HMMN*OOOOO","1HMMN*OOOOOO","1IMNNO*PPPP","1IMNNO*PPPPP","1IMNNO*PPPPPP","1IMNO*PPPPP","1IMNO*PPPPPP","1IMO*PPPPPP","1JNOOP*QQQQ","1JNOOP*QQQQQ","1JNOOP*QQQQQQ","1JNOOP*QQQQQQQ","1JNOP*QQQQQ","1JNOP*QQQQQQ","1JNOP*QQQQQQQ","1JNOPPQQQQR","1KNQ*RRRRRR","1KOPPQ*RRRR","1KOPPQ*RRRRR","1KOPPQ*RRRRRR","1KOPPQ*RRRRRRR","1KOPPQ*RRRRRRRR","1LMPRRRRRRR","1LMPRRRRRRRR","222QQQQQQR*","22QQQQQQQR*","2BDEF*GGGGG","2DGHHI*JJJJ","2DHHI*JJJJJ","2EHIIJ*KKKK","2EHIIJ*KKKKK","2EHIJ*KKKKK","2FIJJK*LLLL","2FIJJK*LLLLL","2FIJJK*LLLLLL","2FIJK*LLLLL","2FIJK*LLLLLL","2GJKKL*MMMM","2GJKKL*MMMMM","2GJKKL*MMMMMM","2GJKKL*MMMMMMM","2GJKLLMMMMN","2HLMMN*OOOO","2HMMN*OOOOO","2IMNNO*PPPP","2IMNNO*PPPPP","2IMNO*PPPPP","2INNO*PPPPP","2INNO*PPPPPP","2JNOOP*QQQQ","2JNOOP*QQQQQ","2JNOOP*QQQQQQ","2JNOP*QQQQQ","2JNOP*QQQQQQ","2JNP*QQQQQQ","2KOPPQ*RRRR","2KOPPQ*RRRRR","2KOPPQ*RRRRRR","2KOPPQ*RRRRRRR","2KOPQ*RRRRR","2KOPQ*RRRRRR","2KOPQ*RRRRRRR","2LMPRRRRRRR","3CEFG*HHHHH","3EHIIJ*KKKK","3EIIJ*KKKKK","3FIJJK*LLLL","3FIJJK*LLLLL","3FIJK*LLLLL","3GJKKL*MMMM","3GJKKL*MMMMM","3GJKKL*MMMMMM","3GJKL*MMMMM","3GJKL*MMMMMM","3HKLLM*NNNN","3HKLLM*NNNNN","3HKLLM*NNNNNN","3HKLLM*NNNNNNN","3HKLMMNNNNO","3IMNNO*PPPP","3INNO*PPPPP","3JNOOP*QQQQ","3JNOOP*QQQQQ","3JNOP*QQQQQ","3JOOP*QQQQQ","3JOOP*QQQQQQ","3KOPPQ*RRRR","3KOPPQ*RRRRR","3KOPPQ*RRRRRR","3KOPQ*RRRRR","3KOPQ*RRRRRR","3KOQ*RRRRRR","4DFGH*IIIII","4FIJJK*LLLL","4FJJK*LLLLL","4GJKKL*MMMM","4GJKKL*MMMMM","4GJKL*MMMMM","4HKLLM*NNNN","4HKLLM*NNNNN","4HKLLM*NNNNNN","4HKLM*NNNNN","4HKLM*NNNNNN","4ILMMN*OOOO","4ILMMN*OOOOO","4ILMMN*OOOOOO","4ILMMN*OOOOOOO","4ILMNNOOOOP","4JNOOP*QQQQ","4JOOP*QQQQQ","4KOPPQ*RRRR","4KOPPQ*RRRRR","4KOPQ*RRRRR","4KPPQ*RRRRR","4KPPQ*RRRRRR","5BRRRRRRRRR","5EGHI*JJJJJ","5GJKKL*MMMM","5GKKL*MMMMM","5HKLLM*NNNN","5HKLLM*NNNNN","5HKLM*NNNNN","5ILMMN*OOOO","5ILMMN*OOOOO","5ILMMN*OOOOOO","5ILMN*OOOOO","5ILMN*OOOOOO","5JMNNO*PPPP","5JMNNO*PPPPP","5JMNNO*PPPPPP","5JMNNO*PPPPPPP","5JMNOOPPPPQ","5KOPPQ*RRRR","5KPPQ*RRRRR","6FHIJ*KKKKK","6HKLLM*NNNN","6HLLM*NNNNN","6ILMMN*OOOO","6ILMMN*OOOOO","6ILMN*OOOOO","6JMNNO*PPPP","6JMNNO*PPPPP","6JMNNO*PPPPPP","6JMNO*PPPPP","6JMNO*PPPPPP","6KNOOP*QQQQ","6KNOOP*QQQQQ","6KNOOP*QQQQQQ","6KNOOP*QQQQQQQ","6KNOPPQQQQR","7GIJK*LLLLL","7ILMMN*OOOO","7IMMN*OOOOO","7JMNNO*PPPP","7JMNNO*PPPPP","7JMNO*PPPPP","7KNOOP*QQQQ","7KNOOP*QQQQQ","7KNOOP*QQQQQQ","7KNOP*QQQQQ","7KNOP*QQQQQQ","7LOPPQ*RRRR","7LOPPQ*RRRRR","7LOPPQ*RRRRRR","7LOPPQ*RRRRRRR","7MMQQRRRRRR","8HJKL*MMMMM","8JMNNO*PPPP","8JNNO*PPPPP","8KNOOP*QQQQ","8KNOOP*QQQQQ","8KNOP*QQQQQ","8LOPPQ*RRRR","8LOPPQ*RRRRR","8LOPPQ*RRRRRR","8LOPQ*RRRRR","8LOPQ*RRRRRR","9IKLM*NNNNN","9KNOOP*QQQQ","9KOOP*QQQQQ","9LOPPQ*RRRR","9LOPPQ*RRRRR","9LOPQ*RRRRR","AJLMN*OOOOO","ALOPPQ*RRRR","ALPPQ*RRRRR","BKMNO*PPPPP","CLNOP*QQQQQ","DMOPQ*RRRRR","1GJKKL*M*","1HKLLM*N*","1ILMMN*O*","1JMNNO*P*","1KNOOP*Q*","1LOPPQ*R*","2HKLLM*N*","2ILMMN*O*","2JMNNO*P*","2KNOOP*Q*","2LOPPQ*R*","3ILMMN*O*","3JMNNO*P*","3KNOOP*Q*","3LOPPQ*R*","4JMNNO*P*","4KNOOP*Q*","4LOPPQ*R*","5KNOOP*Q*","5LOPPQ*R*","6LOPPQ*R*"};
string s29[] = {"1111111111R","111111111QQ","111111111RS*","111111111S*","11111111RRS*","11111111RS*","11111112QRR","1111111RRS*","11111RRRRRS*","11111RRRRS*","11112RRRRS*","1111QQRRRRR","1111RRRRRS*","1112RRRRRS*","1122RRRRRS*","112QRRRRRRR","112RRRRRRRS*","112RRRRRRS*","11LOSSSSSSS","11RRRRRRRRS*","11RRRRRRRS*","122RRRRRRRS*","122RRRRRRS*","12QRRRRRRRS*","12QRRRRRRS*","12RRRRRRRS*","13RRRRRRRRS*","13RRRRRRRS*","14QRRRRRRRS*","14QRRRRRRS*","14RRRRRRRS*","15PRRRRRRS*","15QRRRRRRS*","16RRRRRRRRS*","16RRRRRRRS*","1ACDE*FFFFF","1CFGGH*IIII","1CGGH*IIIII","1DGHHI*JJJJ","1DGHHI*JJJJJ","1DGHI*JJJJJ","1EHIIJ*KKKK","1EHIIJ*KKKKK","1EHIIJ*KKKKKK","1EHIJ*KKKKK","1EHIJ*KKKKKK","1FIJJK*LLLL","1FIJJK*LLLLL","1FIJJK*LLLLLL","1FIJJK*LLLLLLL","1FIJKKLLLLM","1GKLLM*NNNN","1GLLM*NNNNN","1HLMMN*OOOO","1HLMMN*OOOOO","1HLMN*OOOOO","1HMMN*OOOOO","1HMMN*OOOOOO","1IMNNO*PPPP","1IMNNO*PPPPP","1IMNNO*PPPPPP","1IMNO*PPPPP","1IMNO*PPPPPP","1IMO*PPPPPP","1JNOOP*QQQQ","1JNOOP*QQQQQ","1JNOOP*QQQQQQ","1JNOOP*QQQQQQQ","1JNOP*QQQQQ","1JNOP*QQQQQQ","1JNOP*QQQQQQQ","1JNOPPQQQQR","1KNQ*RRRRRR","1KOPPQ*RRRR","1KOPPQ*RRRRR","1KOPPQ*RRRRRR","1KOPPQ*RRRRRRR","1KOPPQ*RRRRRRRR","1KOPQQRRRRRS","1KOPQQRRRRS","1KOPQRRRRRS","1LOR*SSSSSS","1LOR*SSSSSSS","22RRRRRRRRRS*","22RRRRRRRRS*","22RRRRRRRS*","24QRRRRRRS*","2BDEF*GGGGG","2DGHHI*JJJJ","2DHHI*JJJJJ","2EHIIJ*KKKK","2EHIIJ*KKKKK","2EHIJ*KKKKK","2FIJJK*LLLL","2FIJJK*LLLLL","2FIJJK*LLLLLL","2FIJK*LLLLL","2FIJK*LLLLLL","2GJKKL*MMMM","2GJKKL*MMMMM","2GJKKL*MMMMMM","2GJKKL*MMMMMMM","2GJKLLMMMMN","2HLMMN*OOOO","2HMMN*OOOOO","2IMNNO*PPPP","2IMNNO*PPPPP","2IMNO*PPPPP","2INNO*PPPPP","2INNO*PPPPPP","2JNOOP*QQQQ","2JNOOP*QQQQQ","2JNOOP*QQQQQQ","2JNOP*QQQQQ","2JNOP*QQQQQQ","2JNP*QQQQQQ","2KOPPQ*RRRR","2KOPPQ*RRRRR","2KOPPQ*RRRRRR","2KOPPQ*RRRRRRR","2KOPQ*RRRRR","2KOPQ*RRRRRR","2KOPQ*RRRRRRR","2KOPQQRRRRS","2LOR*SSSSSS","2LPQQR*SSSS","2LPQQR*SSSSS","2LPQQR*SSSSSS","2LPQQR*SSSSSSS","2LPQQR*SSSSSSSS","2MNQSSSSSSS","2MNQSSSSSSSS","3CEFG*HHHHH","3EHIIJ*KKKK","3EIIJ*KKKKK","3FIJJK*LLLL","3FIJJK*LLLLL","3FIJK*LLLLL","3GJKKL*MMMM","3GJKKL*MMMMM","3GJKKL*MMMMMM","3GJKL*MMMMM","3GJKL*MMMMMM","3HKLLM*NNNN","3HKLLM*NNNNN","3HKLLM*NNNNNN","3HKLLM*NNNNNNN","3HKLMMNNNNO","3IMNNO*PPPP","3INNO*PPPPP","3JNOOP*QQQQ","3JNOOP*QQQQQ","3JNOP*QQQQQ","3JOOP*QQQQQ","3JOOP*QQQQQQ","3KOPPQ*RRRR","3KOPPQ*RRRRR","3KOPPQ*RRRRRR","3KOPQ*RRRRR","3KOPQ*RRRRRR","3KOQ*RRRRRR","3LPQQR*SSSS","3LPQQR*SSSSS","3LPQQR*SSSSSS","3LPQQR*SSSSSSS","3LPQR*SSSSS","3LPQR*SSSSSS","3LPQR*SSSSSSS","3MNQSSSSSSS","4DFGH*IIIII","4FIJJK*LLLL","4FJJK*LLLLL","4GJKKL*MMMM","4GJKKL*MMMMM","4GJKL*MMMMM","4HKLLM*NNNN","4HKLLM*NNNNN","4HKLLM*NNNNNN","4HKLM*NNNNN","4HKLM*NNNNNN","4ILMMN*OOOO","4ILMMN*OOOOO","4ILMMN*OOOOOO","4ILMMN*OOOOOOO","4ILMNNOOOOP","4JNOOP*QQQQ","4JOOP*QQQQQ","4KOPPQ*RRRR","4KOPPQ*RRRRR","4KOPQ*RRRRR","4KPPQ*RRRRR","4KPPQ*RRRRRR","4LPQQR*SSSS","4LPQQR*SSSSS","4LPQQR*SSSSSS","4LPQR*SSSSS","4LPQR*SSSSSS","4LPR*SSSSSS","5EGHI*JJJJJ","5GJKKL*MMMM","5GKKL*MMMMM","5HKLLM*NNNN","5HKLLM*NNNNN","5HKLM*NNNNN","5ILMMN*OOOO","5ILMMN*OOOOO","5ILMMN*OOOOOO","5ILMN*OOOOO","5ILMN*OOOOOO","5JMNNO*PPPP","5JMNNO*PPPPP","5JMNNO*PPPPPP","5JMNNO*PPPPPPP","5JMNOOPPPPQ","5KOPPQ*RRRR","5KPPQ*RRRRR","5LPQQR*SSSS","5LPQQR*SSSSS","5LPQR*SSSSS","5LQQR*SSSSS","5LQQR*SSSSSS","6CSSSSSSSSS","6FHIJ*KKKKK","6HKLLM*NNNN","6HLLM*NNNNN","6ILMMN*OOOO","6ILMMN*OOOOO","6ILMN*OOOOO","6JMNNO*PPPP","6JMNNO*PPPPP","6JMNNO*PPPPPP","6JMNO*PPPPP","6JMNO*PPPPPP","6KNOOP*QQQQ","6KNOOP*QQQQQ","6KNOOP*QQQQQQ","6KNOOP*QQQQQQQ","6KNOPPQQQQR","6LPQQR*SSSS","6LQQR*SSSSS","7GIJK*LLLLL","7ILMMN*OOOO","7IMMN*OOOOO","7JMNNO*PPPP","7JMNNO*PPPPP","7JMNO*PPPPP","7KNOOP*QQQQ","7KNOOP*QQQQQ","7KNOOP*QQQQQQ","7KNOP*QQQQQ","7KNOP*QQQQQQ","7LOPPQ*RRRR","7LOPPQ*RRRRR","7LOPPQ*RRRRRR","7LOPPQ*RRRRRRR","7LOPQQRRRRS","8HJKL*MMMMM","8JMNNO*PPPP","8JNNO*PPPPP","8KNOOP*QQQQ","8KNOOP*QQQQQ","8KNOP*QQQQQ","8LOPPQ*RRRR","8LOPPQ*RRRRR","8LOPPQ*RRRRRR","8LOPQ*RRRRR","8LOPQ*RRRRRR","8MPQQR*SSSS","8MPQQR*SSSSS","8MPQQR*SSSSSS","8MPQQR*SSSSSSS","8NNRRSSSSSS","9IKLM*NNNNN","9KNOOP*QQQQ","9KOOP*QQQQQ","9LOPPQ*RRRR","9LOPPQ*RRRRR","9LOPQ*RRRRR","9MPQQR*SSSS","9MPQQR*SSSSS","9MPQQR*SSSSSS","9MPQR*SSSSS","9MPQR*SSSSSS","AJLMN*OOOOO","ALOPPQ*RRRR","ALPPQ*RRRRR","AMPQQR*SSSS","AMPQQR*SSSSS","AMPQR*SSSSS","BKMNO*PPPPP","BMPQQR*SSSS","BMQQR*SSSSS","CLNOP*QQQQQ","DMOPQ*RRRRR","ENPQR*SSSSS","1GJKKL*M*","1HKLLM*N*","1ILMMN*O*","1JMNNO*P*","1KNOOP*Q*","1LOPPQ*R*","1LPQQR*S*","1MPQQR*S*","2HKLLM*N*","2ILMMN*O*","2JMNNO*P*","2KNOOP*Q*","2LOPPQ*R*","2MPQQR*S*","3ILMMN*O*","3JMNNO*P*","3KNOOP*Q*","3LOPPQ*R*","3MPQQR*S*","4JMNNO*P*","4KNOOP*Q*","4LOPPQ*R*","4MPQQR*S*","5KNOOP*Q*","5LOPPQ*R*","5MPQQR*S*","6LOPPQ*R*","6MPQQR*S*","7MPQQR*S*"};
string s30[] = {"1111111111R","111111111RS","111111111RSS","111111111SS","11111111RSS","1111111SSSS","111111NTTTT","111111RSSSS","111111SSSST*","111111SSST*","11111LTTTTT","11111SSSSST*","11111SSSST*","11112SSSSSST*","11112SSSSST*","11112SSSST*","1111RSSSSSS","1111RSSSSSSS","1111SSSSSSST*","1111SSSSSST*","1111SSSSST*","1112LSSTTTT","1112SSSSSST*","1112SSSSST*","111LSSTTTTT","111RSSSSSSS","111SSSSSSST*","111SSSSSST*","112SSSSSSSSST*","112SSSSSSSST*","112SSSSSSST*","112SSSSSST*","11RSSSSSSSS","11SSSSSSSSST*","11SSSSSSSST*","11SSSSSSST*","12RSSSSSST*","12SSSSSSSSST*","12SSSSSSSST*","12SSSSSSST*","13RRSSSSST*","14RSSSSSST*","14SSSSSSSSST*","14SSSSSSSST*","14SSSSSSST*","15RRSSSSST*","15SSSSSSSST*","15SSSSSSST*","17RSSSSSST*","1ACDE*FFFFF","1CFGGH*IIII","1CGGH*IIIII","1DGHHI*JJJJ","1DGHHI*JJJJJ","1DGHI*JJJJJ","1EHIIJ*KKKK","1EHIIJ*KKKKK","1EHIIJ*KKKKKK","1EHIJ*KKKKK","1EHIJ*KKKKKK","1FIJJK*LLLL","1FIJJK*LLLLL","1FIJJK*LLLLLL","1FIJJK*LLLLLLL","1FIJKKLLLLM","1GKLLM*NNNN","1GLLM*NNNNN","1HLMMN*OOOO","1HLMMN*OOOOO","1HLMN*OOOOO","1HMMN*OOOOO","1HMMN*OOOOOO","1IMNNO*PPPP","1IMNNO*PPPPP","1IMNNO*PPPPPP","1IMNO*PPPPP","1IMNO*PPPPPP","1IMO*PPPPPP","1JNOOP*QQQQ","1JNOOP*QQQQQ","1JNOOP*QQQQQQ","1JNOOP*QQQQQQQ","1JNOP*QQQQQ","1JNOP*QQQQQQ","1JNOP*QQQQQQQ","1JNOPPQQQQR","1KNQ*RRRRRR","1KOPPQ*RRRR","1KOPPQ*RRRRR","1KOPPQ*RRRRRR","1KOPPQ*RRRRRRR","1KOPPQ*RRRRRRRR","1KOPQQRRRRRS","1KOPQQRRRRS","1KOPQRRRRRS","1LOR*SSSSSS","1LOR*SSSSSSS","1LQRRS*TTTT","1LRRS*TTTTT","22SSSSSSSST*","22SSSSSSST*","23SSSSSSST*","24SSSSSSST*","2BDEF*GGGGG","2DGHHI*JJJJ","2DHHI*JJJJJ","2EHIIJ*KKKK","2EHIIJ*KKKKK","2EHIJ*KKKKK","2FIJJK*LLLL","2FIJJK*LLLLL","2FIJJK*LLLLLL","2FIJK*LLLLL","2FIJK*LLLLLL","2GJKKL*MMMM","2GJKKL*MMMMM","2GJKKL*MMMMMM","2GJKKL*MMMMMMM","2GJKLLMMMMN","2HLMMN*OOOO","2HMMN*OOOOO","2IMNNO*PPPP","2IMNNO*PPPPP","2IMNO*PPPPP","2INNO*PPPPP","2INNO*PPPPPP","2JNOOP*QQQQ","2JNOOP*QQQQQ","2JNOOP*QQQQQQ","2JNOP*QQQQQ","2JNOP*QQQQQQ","2JNP*QQQQQQ","2KOPPQ*RRRR","2KOPPQ*RRRRR","2KOPPQ*RRRRRR","2KOPPQ*RRRRRRR","2KOPQ*RRRRR","2KOPQ*RRRRRR","2KOPQ*RRRRRRR","2KOPQQRRRRS","2LOR*SSSSSS","2LPQQR*SSSS","2LPQQR*SSSSS","2LPQQR*SSSSSS","2LPQQR*SSSSSSS","2LPQQR*SSSSSSSS","2LPQRRSSSSST","2LPQRRSSSST","2LPQRSSSSST","2MPS*TTTTTT","2MPS*TTTTTTT","3CEFG*HHHHH","3EHIIJ*KKKK","3EIIJ*KKKKK","3FIJJK*LLLL","3FIJJK*LLLLL","3FIJK*LLLLL","3GJKKL*MMMM","3GJKKL*MMMMM","3GJKKL*MMMMMM","3GJKL*MMMMM","3GJKL*MMMMMM","3HKLLM*NNNN","3HKLLM*NNNNN","3HKLLM*NNNNNN","3HKLLM*NNNNNNN","3HKLMMNNNNO","3IMNNO*PPPP","3INNO*PPPPP","3JNOOP*QQQQ","3JNOOP*QQQQQ","3JNOP*QQQQQ","3JOOP*QQQQQ","3JOOP*QQQQQQ","3KOPPQ*RRRR","3KOPPQ*RRRRR","3KOPPQ*RRRRRR","3KOPQ*RRRRR","3KOPQ*RRRRRR","3KOQ*RRRRRR","3LPQQR*SSSS","3LPQQR*SSSSS","3LPQQR*SSSSSS","3LPQQR*SSSSSSS","3LPQR*SSSSS","3LPQR*SSSSSS","3LPQR*SSSSSSS","3LPQRRSSSST","3MPS*TTTTTT","3MQRRS*TTTT","3MQRRS*TTTTT","3MQRRS*TTTTTT","3MQRRS*TTTTTTT","3MQRRS*TTTTTTTT","3NORTTTTTTT","3NORTTTTTTTT","4DFGH*IIIII","4FIJJK*LLLL","4FJJK*LLLLL","4GJKKL*MMMM","4GJKKL*MMMMM","4GJKL*MMMMM","4HKLLM*NNNN","4HKLLM*NNNNN","4HKLLM*NNNNNN","4HKLM*NNNNN","4HKLM*NNNNNN","4ILMMN*OOOO","4ILMMN*OOOOO","4ILMMN*OOOOOO","4ILMMN*OOOOOOO","4ILMNNOOOOP","4JNOOP*QQQQ","4JOOP*QQQQQ","4KOPPQ*RRRR","4KOPPQ*RRRRR","4KOPQ*RRRRR","4KPPQ*RRRRR","4KPPQ*RRRRRR","4LPQQR*SSSS","4LPQQR*SSSSS","4LPQQR*SSSSSS","4LPQR*SSSSS","4LPQR*SSSSSS","4LPR*SSSSSS","4MQRRS*TTTT","4MQRRS*TTTTT","4MQRRS*TTTTTT","4MQRRS*TTTTTTT","4MQRS*TTTTT","4MQRS*TTTTTT","4MQRS*TTTTTTT","4NORTTTTTTT","5EGHI*JJJJJ","5GJKKL*MMMM","5GKKL*MMMMM","5HKLLM*NNNN","5HKLLM*NNNNN","5HKLM*NNNNN","5ILMMN*OOOO","5ILMMN*OOOOO","5ILMMN*OOOOOO","5ILMN*OOOOO","5ILMN*OOOOOO","5JMNNO*PPPP","5JMNNO*PPPPP","5JMNNO*PPPPPP","5JMNNO*PPPPPPP","5JMNOOPPPPQ","5KOPPQ*RRRR","5KPPQ*RRRRR","5LPQQR*SSSS","5LPQQR*SSSSS","5LPQR*SSSSS","5LQQR*SSSSS","5LQQR*SSSSSS","5MQRRS*TTTT","5MQRRS*TTTTT","5MQRRS*TTTTTT","5MQRS*TTTTT","5MQRS*TTTTTT","5MQS*TTTTTT","6FHIJ*KKKKK","6HKLLM*NNNN","6HLLM*NNNNN","6ILMMN*OOOO","6ILMMN*OOOOO","6ILMN*OOOOO","6JMNNO*PPPP","6JMNNO*PPPPP","6JMNNO*PPPPPP","6JMNO*PPPPP","6JMNO*PPPPPP","6KNOOP*QQQQ","6KNOOP*QQQQQ","6KNOOP*QQQQQQ","6KNOOP*QQQQQQQ","6KNOPPQQQQR","6LPQQR*SSSS","6LQQR*SSSSS","6MQRRS*TTTT","6MQRRS*TTTTT","6MQRS*TTTTT","6MRRS*TTTTT","6MRRS*TTTTTT","7DTTTTTTTTT","7GIJK*LLLLL","7ILMMN*OOOO","7IMMN*OOOOO","7JMNNO*PPPP","7JMNNO*PPPPP","7JMNO*PPPPP","7KNOOP*QQQQ","7KNOOP*QQQQQ","7KNOOP*QQQQQQ","7KNOP*QQQQQ","7KNOP*QQQQQQ","7LOPPQ*RRRR","7LOPPQ*RRRRR","7LOPPQ*RRRRRR","7LOPPQ*RRRRRRR","7LOPQQRRRRS","7MQRRS*TTTT","7MRRS*TTTTT","8HJKL*MMMMM","8JMNNO*PPPP","8JNNO*PPPPP","8KNOOP*QQQQ","8KNOOP*QQQQQ","8KNOP*QQQQQ","8LOPPQ*RRRR","8LOPPQ*RRRRR","8LOPPQ*RRRRRR","8LOPQ*RRRRR","8LOPQ*RRRRRR","8MPQQR*SSSS","8MPQQR*SSSSS","8MPQQR*SSSSSS","8MPQQR*SSSSSSS","8MPQRRSSSST","9IKLM*NNNNN","9KNOOP*QQQQ","9KOOP*QQQQQ","9LOPPQ*RRRR","9LOPPQ*RRRRR","9LOPQ*RRRRR","9MPQQR*SSSS","9MPQQR*SSSSS","9MPQQR*SSSSSS","9MPQR*SSSSS","9MPQR*SSSSSS","9NQRRS*TTTT","9NQRRS*TTTTT","9NQRRS*TTTTTT","9NQRRS*TTTTTTT","9OOSSTTTTTT","AJLMN*OOOOO","ALOPPQ*RRRR","ALPPQ*RRRRR","AMPQQR*SSSS","AMPQQR*SSSSS","AMPQR*SSSSS","ANQRRS*TTTT","ANQRRS*TTTTT","ANQRRS*TTTTTT","ANQRS*TTTTT","ANQRS*TTTTTT","BKMNO*PPPPP","BMPQQR*SSSS","BMQQR*SSSSS","BNQRRS*TTTT","BNQRRS*TTTTT","BNQRS*TTTTT","CLNOP*QQQQQ","CNQRRS*TTTT","CNRRS*TTTTT","DMOPQ*RRRRR","ENPQR*SSSSS","FOQRS*TTTTT","1GJKKL*M*","1HKLLM*N*","1ILMMN*O*","1JMNNO*P*","1KNOOP*Q*","1LOPPQ*R*","1LPQQR*S*","1MPQQR*S*","1MQRRS*T*","1NQRRS*T*","2HKLLM*N*","2ILMMN*O*","2JMNNO*P*","2KNOOP*Q*","2LOPPQ*R*","2MPQQR*S*","2MQRRS*T*","2NQRRS*T*","3ILMMN*O*","3JMNNO*P*","3KNOOP*Q*","3LOPPQ*R*","3MPQQR*S*","3NQRRS*T*","4JMNNO*P*","4KNOOP*Q*","4LOPPQ*R*","4MPQQR*S*","4NQRRS*T*","5KNOOP*Q*","5LOPPQ*R*","5MPQQR*S*","5NQRRS*T*","6LOPPQ*R*","6MPQQR*S*","6NQRRS*T*","7MPQQR*S*","7NQRRS*T*","8NQRRS*T*"};
string s31[] = {"1111111111R","111111112U*","1111112TTU*","111111OUUUU","111111TTTTTTU*","111111TTTTTU*","111111TTTTU*","111111TTTU*","11111TTTTTTTU*","11111TTTTTTU*","11111TTTTTU*","11111TTTTU*","11112MUUUUU","11112TTTTU*","1111TTTTTTTTU*","1111TTTTTTTU*","1111TTTTTTU*","1111TTTTTU*","1112MTUUUUU","111TTTTTTTTTU*","111TTTTTTTTU*","111TTTTTTTU*","111TTTTTTU*","1123TTTTTU*","112MTTUUUUU","112TTTTTTTTU*","112TTTTTTTU*","112TTTTTTU*","113TTTTTTTU*","113TTTTTTU*","11TTTTTTTTTTTU*","11TTTTTTTTTTU*","11TTTTTTTTTU*","11TTTTTTTTU*","11TTTTTTTU*","123TTTTTTU*","12MTTTTUUUU","12MTTTTUUUUU","12MTTTUUUUU","12SSTTTTTTU","12STTTTTTTU*","12STTTTTTU*","12TTTTTTTTU*","12TTTTTTTU*","13STTTTTTTU*","13STTTTTTU*","13TTTTTTTU*","14RTTTTTTU*","14TTTTTTTTU*","14TTTTTTTU*","15STTTTTTTU*","15STTTTTTU*","15TTTTTTTU*","16RTTTTTTU*","16STTTTTTU*","17TTTTTTTTU*","17TTTTTTTU*","1ACDE*FFFFF","1CFGGH*IIII","1CGGH*IIIII","1DGHHI*JJJJ","1DGHHI*JJJJJ","1DGHI*JJJJJ","1EHIIJ*KKKK","1EHIIJ*KKKKK","1EHIIJ*KKKKKK","1EHIJ*KKKKK","1EHIJ*KKKKKK","1FIJJK*LLLL","1FIJJK*LLLLL","1FIJJK*LLLLLL","1FIJJK*LLLLLLL","1FIJKKLLLLM","1GKLLM*NNNN","1GLLM*NNNNN","1HLMMN*OOOO","1HLMMN*OOOOO","1HLMN*OOOOO","1HMMN*OOOOO","1HMMN*OOOOOO","1IMNNO*PPPP","1IMNNO*PPPPP","1IMNNO*PPPPPP","1IMNO*PPPPP","1IMNO*PPPPPP","1IMO*PPPPPP","1JNOOP*QQQQ","1JNOOP*QQQQQ","1JNOOP*QQQQQQ","1JNOOP*QQQQQQQ","1JNOP*QQQQQ","1JNOP*QQQQQQ","1JNOP*QQQQQQQ","1JNOPPQQQQR","1KNQ*RRRRRR","1KOPPQ*RRRR","1KOPPQ*RRRRR","1KOPPQ*RRRRRR","1KOPPQ*RRRRRRR","1KOPPQ*RRRRRRRR","1KOPQQRRRRRS","1KOPQQRRRRS","1KOPQRRRRRS","1LOR*SSSSSS","1LOR*SSSSSSS","1LQRRS*TTTT","1LRRS*TTTTT","1MRSST*UUUU","1MRSST*UUUUU","1MRST*UUUUU","1MSST*UUUUU","1MSST*UUUUUU","1MST*UUUUUU","23STTTTTTU*","23TTTTTTTU*","2BDEF*GGGGG","2DGHHI*JJJJ","2DHHI*JJJJJ","2EHIIJ*KKKK","2EHIIJ*KKKKK","2EHIJ*KKKKK","2FIJJK*LLLL","2FIJJK*LLLLL","2FIJJK*LLLLLL","2FIJK*LLLLL","2FIJK*LLLLLL","2GJKKL*MMMM","2GJKKL*MMMMM","2GJKKL*MMMMMM","2GJKKL*MMMMMMM","2GJKLLMMMMN","2HLMMN*OOOO","2HMMN*OOOOO","2IMNNO*PPPP","2IMNNO*PPPPP","2IMNO*PPPPP","2INNO*PPPPP","2INNO*PPPPPP","2JNOOP*QQQQ","2JNOOP*QQQQQ","2JNOOP*QQQQQQ","2JNOP*QQQQQ","2JNOP*QQQQQQ","2JNP*QQQQQQ","2KOPPQ*RRRR","2KOPPQ*RRRRR","2KOPPQ*RRRRRR","2KOPPQ*RRRRRRR","2KOPQ*RRRRR","2KOPQ*RRRRRR","2KOPQ*RRRRRRR","2KOPQQRRRRS","2LOR*SSSSSS","2LPQQR*SSSS","2LPQQR*SSSSS","2LPQQR*SSSSSS","2LPQQR*SSSSSSS","2LPQQR*SSSSSSSS","2LPQRRSSSSST","2LPQRRSSSST","2LPQRSSSSST","2MPS*TTTTTT","2MPS*TTTTTTT","2MRSST*UUUU","2MSST*UUUUU","3CEFG*HHHHH","3EHIIJ*KKKK","3EIIJ*KKKKK","3FIJJK*LLLL","3FIJJK*LLLLL","3FIJK*LLLLL","3GJKKL*MMMM","3GJKKL*MMMMM","3GJKKL*MMMMMM","3GJKL*MMMMM","3GJKL*MMMMMM","3HKLLM*NNNN","3HKLLM*NNNNN","3HKLLM*NNNNNN","3HKLLM*NNNNNNN","3HKLMMNNNNO","3IMNNO*PPPP","3INNO*PPPPP","3JNOOP*QQQQ","3JNOOP*QQQQQ","3JNOP*QQQQQ","3JOOP*QQQQQ","3JOOP*QQQQQQ","3KOPPQ*RRRR","3KOPPQ*RRRRR","3KOPPQ*RRRRRR","3KOPQ*RRRRR","3KOPQ*RRRRRR","3KOQ*RRRRRR","3LPQQR*SSSS","3LPQQR*SSSSS","3LPQQR*SSSSSS","3LPQQR*SSSSSSS","3LPQR*SSSSS","3LPQR*SSSSSS","3LPQR*SSSSSSS","3LPQRRSSSST","3MPS*TTTTTT","3MQRRS*TTTT","3MQRRS*TTTTT","3MQRRS*TTTTTT","3MQRRS*TTTTTTT","3MQRRS*TTTTTTTT","3MQRSSTTTTTU","3MQRSSTTTTU","3MQRSTTTTTU","3NQT*UUUUUU","3NQT*UUUUUUU","4DFGH*IIIII","4FIJJK*LLLL","4FJJK*LLLLL","4GJKKL*MMMM","4GJKKL*MMMMM","4GJKL*MMMMM","4HKLLM*NNNN","4HKLLM*NNNNN","4HKLLM*NNNNNN","4HKLM*NNNNN","4HKLM*NNNNNN","4ILMMN*OOOO","4ILMMN*OOOOO","4ILMMN*OOOOOO","4ILMMN*OOOOOOO","4ILMNNOOOOP","4JNOOP*QQQQ","4JOOP*QQQQQ","4KOPPQ*RRRR","4KOPPQ*RRRRR","4KOPQ*RRRRR","4KPPQ*RRRRR","4KPPQ*RRRRRR","4LPQQR*SSSS","4LPQQR*SSSSS","4LPQQR*SSSSSS","4LPQR*SSSSS","4LPQR*SSSSSS","4LPR*SSSSSS","4MQRRS*TTTT","4MQRRS*TTTTT","4MQRRS*TTTTTT","4MQRRS*TTTTTTT","4MQRS*TTTTT","4MQRS*TTTTTT","4MQRS*TTTTTTT","4MQRSSTTTTU","4NQT*UUUUUU","4NRSST*UUUU","4NRSST*UUUUU","4NRSST*UUUUUU","4NRSST*UUUUUUU","4NRSST*UUUUUUUU","4OPSUUUUUUU","4OPSUUUUUUUU","5EGHI*JJJJJ","5GJKKL*MMMM","5GKKL*MMMMM","5HKLLM*NNNN","5HKLLM*NNNNN","5HKLM*NNNNN","5ILMMN*OOOO","5ILMMN*OOOOO","5ILMMN*OOOOOO","5ILMN*OOOOO","5ILMN*OOOOOO","5JMNNO*PPPP","5JMNNO*PPPPP","5JMNNO*PPPPPP","5JMNNO*PPPPPPP","5JMNOOPPPPQ","5KOPPQ*RRRR","5KPPQ*RRRRR","5LPQQR*SSSS","5LPQQR*SSSSS","5LPQR*SSSSS","5LQQR*SSSSS","5LQQR*SSSSSS","5MQRRS*TTTT","5MQRRS*TTTTT","5MQRRS*TTTTTT","5MQRS*TTTTT","5MQRS*TTTTTT","5MQS*TTTTTT","5NRSST*UUUU","5NRSST*UUUUU","5NRSST*UUUUUU","5NRSST*UUUUUUU","5NRST*UUUUU","5NRST*UUUUUU","5NRST*UUUUUUU","5OPSUUUUUUU","6FHIJ*KKKKK","6HKLLM*NNNN","6HLLM*NNNNN","6ILMMN*OOOO","6ILMMN*OOOOO","6ILMN*OOOOO","6JMNNO*PPPP","6JMNNO*PPPPP","6JMNNO*PPPPPP","6JMNO*PPPPP","6JMNO*PPPPPP","6KNOOP*QQQQ","6KNOOP*QQQQQ","6KNOOP*QQQQQQ","6KNOOP*QQQQQQQ","6KNOPPQQQQR","6LPQQR*SSSS","6LQQR*SSSSS","6MQRRS*TTTT","6MQRRS*TTTTT","6MQRS*TTTTT","6MRRS*TTTTT","6MRRS*TTTTTT","6NRSST*UUUU","6NRSST*UUUUU","6NRSST*UUUUUU","6NRST*UUUUU","6NRST*UUUUUU","6NRT*UUUUUU","7GIJK*LLLLL","7ILMMN*OOOO","7IMMN*OOOOO","7JMNNO*PPPP","7JMNNO*PPPPP","7JMNO*PPPPP","7KNOOP*QQQQ","7KNOOP*QQQQQ","7KNOOP*QQQQQQ","7KNOP*QQQQQ","7KNOP*QQQQQQ","7LOPPQ*RRRR","7LOPPQ*RRRRR","7LOPPQ*RRRRRR","7LOPPQ*RRRRRRR","7LOPQQRRRRS","7MQRRS*TTTT","7MRRS*TTTTT","7NRSST*UUUU","7NRSST*UUUUU","7NRST*UUUUU","7NSST*UUUUU","7NSST*UUUUUU","8EUUUUUUUUU","8HJKL*MMMMM","8JMNNO*PPPP","8JNNO*PPPPP","8KNOOP*QQQQ","8KNOOP*QQQQQ","8KNOP*QQQQQ","8LOPPQ*RRRR","8LOPPQ*RRRRR","8LOPPQ*RRRRRR","8LOPQ*RRRRR","8LOPQ*RRRRRR","8MPQQR*SSSS","8MPQQR*SSSSS","8MPQQR*SSSSSS","8MPQQR*SSSSSSS","8MPQRRSSSST","8NRSST*UUUU","8NSST*UUUUU","9IKLM*NNNNN","9KNOOP*QQQQ","9KOOP*QQQQQ","9LOPPQ*RRRR","9LOPPQ*RRRRR","9LOPQ*RRRRR","9MPQQR*SSSS","9MPQQR*SSSSS","9MPQQR*SSSSSS","9MPQR*SSSSS","9MPQR*SSSSSS","9NQRRS*TTTT","9NQRRS*TTTTT","9NQRRS*TTTTTT","9NQRRS*TTTTTTT","9NQRSSTTTTU","AJLMN*OOOOO","ALOPPQ*RRRR","ALPPQ*RRRRR","AMPQQR*SSSS","AMPQQR*SSSSS","AMPQR*SSSSS","ANQRRS*TTTT","ANQRRS*TTTTT","ANQRRS*TTTTTT","ANQRS*TTTTT","ANQRS*TTTTTT","AORSST*UUUU","AORSST*UUUUU","AORSST*UUUUUU","AORSST*UUUUUUU","APPTTUUUUUU","BKMNO*PPPPP","BMPQQR*SSSS","BMQQR*SSSSS","BNQRRS*TTTT","BNQRRS*TTTTT","BNQRS*TTTTT","BORSST*UUUU","BORSST*UUUUU","BORSST*UUUUUU","BORST*UUUUU","BORST*UUUUUU","CLNOP*QQQQQ","CNQRRS*TTTT","CNRRS*TTTTT","CORSST*UUUU","CORSST*UUUUU","CORST*UUUUU","DMOPQ*RRRRR","DORSST*UUUU","DOSST*UUUUU","ENPQR*SSSSS","FOQRS*TTTTT","GPRST*UUUUU","1GJKKL*M*","1HKLLM*N*","1ILMMN*O*","1JMNNO*P*","1KNOOP*Q*","1LOPPQ*R*","1LPQQR*S*","1MPQQR*S*","1MQRRS*T*","1NQRRS*T*","1NRSST*U*","1ORSST*U*","2HKLLM*N*","2ILMMN*O*","2JMNNO*P*","2KNOOP*Q*","2LOPPQ*R*","2MPQQR*S*","2MQRRS*T*","2NQRRS*T*","2NRSST*U*","2ORSST*U*","3ILMMN*O*","3JMNNO*P*","3KNOOP*Q*","3LOPPQ*R*","3MPQQR*S*","3NQRRS*T*","3NRSST*U*","3ORSST*U*","4JMNNO*P*","4KNOOP*Q*","4LOPPQ*R*","4MPQQR*S*","4NQRRS*T*","4ORSST*U*","5KNOOP*Q*","5LOPPQ*R*","5MPQQR*S*","5NQRRS*T*","5ORSST*U*","6LOPPQ*R*","6MPQQR*S*","6NQRRS*T*","6ORSST*U*","7MPQQR*S*","7NQRRS*T*","7ORSST*U*","8NQRRS*T*","8ORSST*U*","9ORSST*U*"};
string s3236[] = {"1111111111R","1111111222V","1ACDE*FFFFF","1CFGGH*IIII","1CGGH*IIIII","1DGHHI*JJJJ","1DGHHI*JJJJJ","1DGHI*JJJJJ","1EHIIJ*KKKK","1EHIIJ*KKKKK","1EHIIJ*KKKKKK","1EHIJ*KKKKK","1EHIJ*KKKKKK","1FIJJK*LLLL","1FIJJK*LLLLL","1FIJJK*LLLLLL","1FIJJK*LLLLLLL","1FIJKKLLLLM","1GJKKL*M*","1GKLLM*NNNN","1GLLM*NNNNN","1HKLLM*N*","1HLMMN*OOOO","1HLMMN*OOOOO","1HLMN*OOOOO","1HMMN*OOOOO","1HMMN*OOOOOO","1ILMMN*O*","1IMNNO*PPPP","1IMNNO*PPPPP","1IMNNO*PPPPPP","1IMNO*PPPPP","1IMNO*PPPPPP","1IMO*PPPPPP","1JMNNO*P*","1JNOOP*QQQQ","1JNOOP*QQQQQ","1JNOOP*QQQQQQ","1JNOOP*QQQQQQQ","1JNOP*QQQQQ","1JNOP*QQQQQQ","1JNOP*QQQQQQQ","1JNOPPQQQQR","1KNOOP*Q*","1KNQ*RRRRRR","1KOPPQ*RRRR","1KOPPQ*RRRRR","1KOPPQ*RRRRRR","1KOPPQ*RRRRRRR","1KOPPQ*RRRRRRRR","1KOPQQRRRRRS","1KOPQQRRRRS","1KOPQRRRRRS","1LOPPQ*R*","1LOR*SSSSSS","1LOR*SSSSSSS","1LPQQR*S*","1LQRRS*TTTT","1LRRS*TTTTT","1MPQQR*S*","1MQRRS*T*","1MRSST*UUUU","1MRSST*UUUUU","1MRST*UUUUU","1MSST*UUUUU","1MSST*UUUUUU","1MST*UUUUUU","1NQRRS*T*","1NRSST*U*","1NSTTU*VVVV","1NSTTU*VVVVV","1NSTTU*VVVVVV","1NSTU*VVVVV","1NSTU*VVVVVV","1NSU*VVVVVV","1NTTU*VVVVV","1NTTU*VVVVVV","1NTTU*VVVVVVV","1ORSST*U*","1OSTTU*V*","1PSTTU*V*","2BDEF*GGGGG","2DGHHI*JJJJ","2DHHI*JJJJJ","2EHIIJ*KKKK","2EHIIJ*KKKKK","2EHIJ*KKKKK","2FIJJK*LLLL","2FIJJK*LLLLL","2FIJJK*LLLLLL","2FIJK*LLLLL","2FIJK*LLLLLL","2GJKKL*MMMM","2GJKKL*MMMMM","2GJKKL*MMMMMM","2GJKKL*MMMMMMM","2GJKLLMMMMN","2HKLLM*N*","2HLMMN*OOOO","2HMMN*OOOOO","2ILMMN*O*","2IMNNO*PPPP","2IMNNO*PPPPP","2IMNO*PPPPP","2INNO*PPPPP","2INNO*PPPPPP","2JMNNO*P*","2JNOOP*QQQQ","2JNOOP*QQQQQ","2JNOOP*QQQQQQ","2JNOP*QQQQQ","2JNOP*QQQQQQ","2JNP*QQQQQQ","2KNOOP*Q*","2KOPPQ*RRRR","2KOPPQ*RRRRR","2KOPPQ*RRRRRR","2KOPPQ*RRRRRRR","2KOPQ*RRRRR","2KOPQ*RRRRRR","2KOPQ*RRRRRRR","2KOPQQRRRRS","2LOPPQ*R*","2LOR*SSSSSS","2LPQQR*SSSS","2LPQQR*SSSSS","2LPQQR*SSSSSS","2LPQQR*SSSSSSS","2LPQQR*SSSSSSSS","2LPQRRSSSSST","2LPQRRSSSST","2LPQRSSSSST","2MPQQR*S*","2MPS*TTTTTT","2MPS*TTTTTTT","2MQRRS*T*","2MRSST*UUUU","2MSST*UUUUU","2NQRRS*T*","2NRSST*U*","2NSTTU*VVVV","2NSTTU*VVVVV","2NSTU*VVVVV","2NTTU*VVVVV","2NTTU*VVVVVV","2NTU*VVVVVV","2ORSST*U*","2OSTTU*V*","2PSTTU*V*","3CEFG*HHHHH","3EHIIJ*KKKK","3EIIJ*KKKKK","3FIJJK*LLLL","3FIJJK*LLLLL","3FIJK*LLLLL","3GJKKL*MMMM","3GJKKL*MMMMM","3GJKKL*MMMMMM","3GJKL*MMMMM","3GJKL*MMMMMM","3HKLLM*NNNN","3HKLLM*NNNNN","3HKLLM*NNNNNN","3HKLLM*NNNNNNN","3HKLMMNNNNO","3ILMMN*O*","3IMNNO*PPPP","3INNO*PPPPP","3JMNNO*P*","3JNOOP*QQQQ","3JNOOP*QQQQQ","3JNOP*QQQQQ","3JOOP*QQQQQ","3JOOP*QQQQQQ","3KNOOP*Q*","3KOPPQ*RRRR","3KOPPQ*RRRRR","3KOPPQ*RRRRRR","3KOPQ*RRRRR","3KOPQ*RRRRRR","3KOQ*RRRRRR","3LOPPQ*R*","3LPQQR*SSSS","3LPQQR*SSSSS","3LPQQR*SSSSSS","3LPQQR*SSSSSSS","3LPQR*SSSSS","3LPQR*SSSSSS","3LPQR*SSSSSSS","3LPQRRSSSST","3MPQQR*S*","3MPS*TTTTTT","3MQRRS*TTTT","3MQRRS*TTTTT","3MQRRS*TTTTTT","3MQRRS*TTTTTTT","3MQRRS*TTTTTTTT","3MQRSSTTTTTU","3MQRSSTTTTU","3MQRSTTTTTU","3NQRRS*T*","3NQT*UUUUUU","3NQT*UUUUUUU","3NRSST*U*","3NSTTU*VVVV","3NTTU*VVVVV","3ORSST*U*","3OSTTU*V*","3PSTTU*V*","4DFGH*IIIII","4FIJJK*LLLL","4FJJK*LLLLL","4GJKKL*MMMM","4GJKKL*MMMMM","4GJKL*MMMMM","4HKLLM*NNNN","4HKLLM*NNNNN","4HKLLM*NNNNNN","4HKLM*NNNNN","4HKLM*NNNNNN","4ILMMN*OOOO","4ILMMN*OOOOO","4ILMMN*OOOOOO","4ILMMN*OOOOOOO","4ILMNNOOOOP","4JMNNO*P*","4JNOOP*QQQQ","4JOOP*QQQQQ","4KNOOP*Q*","4KOPPQ*RRRR","4KOPPQ*RRRRR","4KOPQ*RRRRR","4KPPQ*RRRRR","4KPPQ*RRRRRR","4LOPPQ*R*","4LPQQR*SSSS","4LPQQR*SSSSS","4LPQQR*SSSSSS","4LPQR*SSSSS","4LPQR*SSSSSS","4LPR*SSSSSS","4MPQQR*S*","4MQRRS*TTTT","4MQRRS*TTTTT","4MQRRS*TTTTTT","4MQRRS*TTTTTTT","4MQRS*TTTTT","4MQRS*TTTTTT","4MQRS*TTTTTTT","4MQRSSTTTTU","4NQRRS*T*","4NQT*UUUUUU","4NRSST*UUUU","4NRSST*UUUUU","4NRSST*UUUUUU","4NRSST*UUUUUUU","4NRSST*UUUUUUUU","4NRSTTUUUUUV","4NRSTTUUUUV","4NRSTUUUUUV","4ORSST*U*","4ORU*VVVVVV","4ORU*VVVVVVV","4OSTTU*V*","4PSTTU*V*","5EGHI*JJJJJ","5GJKKL*MMMM","5GKKL*MMMMM","5HKLLM*NNNN","5HKLLM*NNNNN","5HKLM*NNNNN","5ILMMN*OOOO","5ILMMN*OOOOO","5ILMMN*OOOOOO","5ILMN*OOOOO","5ILMN*OOOOOO","5JMNNO*PPPP","5JMNNO*PPPPP","5JMNNO*PPPPPP","5JMNNO*PPPPPPP","5JMNOOPPPPQ","5KNOOP*Q*","5KOPPQ*RRRR","5KPPQ*RRRRR","5LOPPQ*R*","5LPQQR*SSSS","5LPQQR*SSSSS","5LPQR*SSSSS","5LQQR*SSSSS","5LQQR*SSSSSS","5MPQQR*S*","5MQRRS*TTTT","5MQRRS*TTTTT","5MQRRS*TTTTTT","5MQRS*TTTTT","5MQRS*TTTTTT","5MQS*TTTTTT","5NQRRS*T*","5NRSST*UUUU","5NRSST*UUUUU","5NRSST*UUUUUU","5NRSST*UUUUUUU","5NRST*UUUUU","5NRST*UUUUUU","5NRST*UUUUUUU","5NRSTTUUUUV","5ORSST*U*","5ORU*VVVVVV","5OSTTU*VVVV","5OSTTU*VVVVV","5OSTTU*VVVVVV","5OSTTU*VVVVVVV","5OSTTU*VVVVVVVV","5PSTTU*V*","6FHIJ*KKKKK","6HKLLM*NNNN","6HLLM*NNNNN","6ILMMN*OOOO","6ILMMN*OOOOO","6ILMN*OOOOO","6JMNNO*PPPP","6JMNNO*PPPPP","6JMNNO*PPPPPP","6JMNO*PPPPP","6JMNO*PPPPPP","6KNOOP*QQQQ","6KNOOP*QQQQQ","6KNOOP*QQQQQQ","6KNOOP*QQQQQQQ","6KNOPPQQQQR","6LOPPQ*R*","6LPQQR*SSSS","6LQQR*SSSSS","6MPQQR*S*","6MQRRS*TTTT","6MQRRS*TTTTT","6MQRS*TTTTT","6MRRS*TTTTT","6MRRS*TTTTTT","6NQRRS*T*","6NRSST*UUUU","6NRSST*UUUUU","6NRSST*UUUUUU","6NRST*UUUUU","6NRST*UUUUUU","6NRT*UUUUUU","6ORSST*U*","6OSTTU*VVVV","6OSTTU*VVVVV","6OSTTU*VVVVVV","6OSTTU*VVVVVVV","6OSTU*VVVVV","6OSTU*VVVVVV","6OSTU*VVVVVVV","6PSTTU*V*","7GIJK*LLLLL","7ILMMN*OOOO","7IMMN*OOOOO","7JMNNO*PPPP","7JMNNO*PPPPP","7JMNO*PPPPP","7KNOOP*QQQQ","7KNOOP*QQQQQ","7KNOOP*QQQQQQ","7KNOP*QQQQQ","7KNOP*QQQQQQ","7LOPPQ*RRRR","7LOPPQ*RRRRR","7LOPPQ*RRRRRR","7LOPPQ*RRRRRRR","7LOPQQRRRRS","7MPQQR*S*","7MQRRS*TTTT","7MRRS*TTTTT","7NQRRS*T*","7NRSST*UUUU","7NRSST*UUUUU","7NRST*UUUUU","7NSST*UUUUU","7NSST*UUUUUU","7ORSST*U*","7OSTTU*VVVV","7OSTTU*VVVVV","7OSTTU*VVVVVV","7OSTU*VVVVV","7OSTU*VVVVVV","7OSU*VVVVVV","7PSTTU*V*","8HJKL*MMMMM","8JMNNO*PPPP","8JNNO*PPPPP","8KNOOP*QQQQ","8KNOOP*QQQQQ","8KNOP*QQQQQ","8LOPPQ*RRRR","8LOPPQ*RRRRR","8LOPPQ*RRRRRR","8LOPQ*RRRRR","8LOPQ*RRRRRR","8MPQQR*SSSS","8MPQQR*SSSSS","8MPQQR*SSSSSS","8MPQQR*SSSSSSS","8MPQRRSSSST","8NQRRS*T*","8NRSST*UUUU","8NSST*UUUUU","8ORSST*U*","8OSTTU*VVVV","8OSTTU*VVVVV","8OSTU*VVVVV","8OTTU*VVVVV","8OTTU*VVVVVV","8PSTTU*V*","9IKLM*NNNNN","9KNOOP*QQQQ","9KOOP*QQQQQ","9LOPPQ*RRRR","9LOPPQ*RRRRR","9LOPQ*RRRRR","9MPQQR*SSSS","9MPQQR*SSSSS","9MPQQR*SSSSSS","9MPQR*SSSSS","9MPQR*SSSSSS","9NQRRS*TTTT","9NQRRS*TTTTT","9NQRRS*TTTTTT","9NQRRS*TTTTTTT","9NQRSSTTTTU","9ORSST*U*","9OSTTU*VVVV","9OTTU*VVVVV","9PSTTU*V*","AJLMN*OOOOO","ALOPPQ*RRRR","ALPPQ*RRRRR","AMPQQR*SSSS","AMPQQR*SSSSS","AMPQR*SSSSS","ANQRRS*TTTT","ANQRRS*TTTTT","ANQRRS*TTTTTT","ANQRS*TTTTT","ANQRS*TTTTTT","AORSST*UUUU","AORSST*UUUUU","AORSST*UUUUUU","AORSST*UUUUUUU","AORSTTUUUUV","APSTTU*V*","BKMNO*PPPPP","BMPQQR*SSSS","BMQQR*SSSSS","BNQRRS*TTTT","BNQRRS*TTTTT","BNQRS*TTTTT","BORSST*UUUU","BORSST*UUUUU","BORSST*UUUUUU","BORST*UUUUU","BORST*UUUUUU","BPSTTU*VVVV","BPSTTU*VVVVV","BPSTTU*VVVVVV","BPSTTU*VVVVVVV","CLNOP*QQQQQ","CNQRRS*TTTT","CNRRS*TTTTT","CORSST*UUUU","CORSST*UUUUU","CORST*UUUUU","CPSTTU*VVVV","CPSTTU*VVVVV","CPSTTU*VVVVVV","CPSTU*VVVVV","CPSTU*VVVVVV","DMOPQ*RRRRR","DORSST*UUUU","DOSST*UUUUU","DPSTTU*VVVV","DPSTTU*VVVVV","DPSTU*VVVVV","ENPQR*SSSSS","EPSTTU*VVVV","EPTTU*VVVVV","FOQRS*TTTTT","GPRST*UUUUU","HQSTU*VVVVV"};
string s32[] = {"1111111111V*","111111111V*","111111112Q","11111111R","11111111UUV*","11111111UV*","11111111V*","11111112UV*","1111111R","1111111UUV*","1111111V*","111111PVVVV","111111R","111111UUUUV*","111111UUUV*","111111V*","11111R","11111UUUUV*","1111222UUV*","111122UUUV*","1111UUUUUUV*","1111UUUUUV*","111222UUUV*","1112UUUUUV*","111UUUUUUV*","11222UUUUV*","1122UUUUUV*","113UUUUUUUV*","113UUUUUUV*","11UUUUUUUUUV*","11UUUUUUUUV*","11UUUUUUUV*","1222UUUUUV*","122UUUUUUUV*","122UUUUUUV*","123TUUUUUUV*","123TUUUUUV*","123UUUUUUV*","12HTVVVVVVV","12TUUUUUUUUUV*","12TUUUUUUUUV*","12TUUUUUUUV*","12TUUUUUUV*","12UUUUUUUUUV*","12UUUUUUUUV*","12UUUUUUUV*","13NTUUVVVVV","13SUUUUUUUV","13TTUUUUUV*","13TUUUUUUV*","13UUUUUUUUUV*","13UUUUUUUUV*","13UUUUUUUV*","14TTUUUUUV*","15TUUUUUUV*","15UUUUUUUUUV*","15UUUUUUUUV*","15UUUUUUUV*","16TTUUUUUV*","16UUUUUUUUV*","16UUUUUUUV*","18TUUUUUUV*","222UUUUUUV*","22UUUUUUUV*","23TUUUUUUV*","23UUUUUUUUV*","23UUUUUUUV*","24TUUUUUUV*","5PQTVVVVVVV","5PQTVVVVVVVV","6PQTVVVVVVV","9FVVVVVVVVV","BQQUUVVVVVV"};
string s3336[] = {"1*2*","1111111111V","111111111Q","111111111R","111111111S","1OSUV*WWWWW","1OTUUV*WWWW","1OTUUV*WWWWW","1OTUUV*WWWWWW","1OTUUV*WWWWWWW","1OTUV*WWWWW","1OTUV*WWWWWW","1OTUV*WWWWWWW","1OTV*WWWWWW","1OTV*WWWWWWW","1PTUUV*W*","1QTUUV*W*","2OTUUV*WWWW","2OTUUV*WWWWW","2OTUUV*WWWWWW","2OTUV*WWWWW","2OTUV*WWWWWW","2OTV*WWWWWW","2OUUV*WWWWW","2OUUV*WWWWWW","2OUUV*WWWWWWW","2PTUUV*W*","2QTUUV*W*","3OTUUV*WWWW","3OTUUV*WWWWW","3OTUV*WWWWW","3OUUV*WWWWW","3OUUV*WWWWWW","3OUV*WWWWWW","3PTUUV*W*","3QTUUV*W*","4OTUUV*WWWW","4OUUV*WWWWW","4PTUUV*W*","4QTUUV*W*","5OSTUUVVVVVW","5OSTUUVVVVW","5OSTUVVVVVW","5PSV*WWWWWW","5PSV*WWWWWWW","5PTUUV*W*","5QTUUV*W*","6OSTUUVVVVW","6PSV*WWWWWW","6PTUUV*WWWW","6PTUUV*WWWWW","6PTUUV*WWWWWW","6PTUUV*WWWWWWW","6PTUUV*WWWWWWWW","6QTUUV*W*","7PTUUV*WWWW","7PTUUV*WWWWW","7PTUUV*WWWWWW","7PTUUV*WWWWWWW","7PTUV*WWWWW","7PTUV*WWWWWW","7PTUV*WWWWWWW","7QTUUV*W*","8PTUUV*WWWW","8PTUUV*WWWWW","8PTUUV*WWWWWW","8PTUV*WWWWW","8PTUV*WWWWWW","8PTV*WWWWWW","8QTUUV*W*","9PTUUV*WWWW","9PTUUV*WWWWW","9PTUV*WWWWW","9PUUV*WWWWW","9PUUV*WWWWWW","9QTUUV*W*","APTUUV*WWWW","APUUV*WWWWW","AQTUUV*W*","BPSTUUVVVVW","BQTUUV*W*","CQTUUV*WWWW","CQTUUV*WWWWW","CQTUUV*WWWWWW","CQTUUV*WWWWWWW","DQTUUV*WWWW","DQTUUV*WWWWW","DQTUUV*WWWWWW","DQTUV*WWWWW","DQTUV*WWWWWW","EQTUUV*WWWW","EQTUUV*WWWWW","EQTUV*WWWWW","FQTUUV*WWWW","FQUUV*WWWWW","IRTUV*WWWWW"};
string s33[] = {"111111111VW*","111111111W*","111111112W*","11111111VW*","111111122VW*","111111122W*","11111112VW*","11111122VVW*","11111122VW*","1111112VVVW*","1111112VVW*","111111QWWWW","111111VVVW*","1111122VVVW*","1111122VVW*","111112VVVW*","11111VVVVVW*","11111VVVVW*","111122VVVVW*","111122VVVW*","11112VVVVVW*","11112VVVVW*","1111VVVVVW*","11122VVVVVW*","11122VVVVW*","1112VVVVVVW*","1112VVVVVW*","111VVVVVVW*","1122VVVVVVW*","1122VVVVVW*","112VVVVVVW*","113VVVVVVW*","11OSVVWWWWW","11OTWWWWWWW","122VVVVVVVW*","122VVVVVVW*","123VVVVVVVW*","123VVVVVVW*","12UVVVVVVVW*","12UVVVVVVW*","12VVVVVVVVVVVW*","12VVVVVVVVVVW*","12VVVVVVVVVW*","12VVVVVVVVW*","12VVVVVVVW*","13OUVVWWWWW","13OUVVWWWWWW","13OUVWWWWWW","13UUVVVVVVVW*","13UUVVVVVVW*","13UUVVVVVW*","13UVVVVVVVW*","13UVVVVVVW*","13VVVVVVVVW*","13VVVVVVVW*","14TUVVVVVWW","14TVVVVVVW*","14UVVVVVVVW*","14UVVVVVVW*","14VVVVVVVW*","15TVVVVVVW*","15VVVVVVVVW*","15VVVVVVVW*","16UVVVVVVVW*","16UVVVVVVW*","16VVVVVVVW*","17TVVVVVVW*","17UVVVVVVW*","18VVVVVVVW*","222VVVVVVW*","22VVVVVVVVVW*","22VVVVVVVVW*","22VVVVVVVW*","23VVVVVVVW*","24VVVVVVVVW*","24VVVVVVVW*","3IUWWWWWWWW","6QRUWWWWWWW","6QRUWWWWWWWW","7QRUWWWWWWW","AGWWWWWWWWW","CRRVVWWWWWW"};
string s3436[] = {"111111111V","1OTUVVWWWWX","1PTVW*XXXXX","1PTVW*XXXXXX","1PTW*XXXXXX","1PUVVW*XXXX","1PUVVW*XXXXX","1PUVVW*XXXXXX","1PUVVW*XXXXXXX","1PUVVW*XXXXXXXX","1PUVW*XXXXX","1PUVW*XXXXXX","1PUVW*XXXXXXX","1PUVW*XXXXXXXX","1QUVVW*X*","1RUVVW*X*","2PTVW*XXXXX","2PUVVW*XXXX","2PUVVW*XXXXX","2PUVVW*XXXXXX","2PUVVW*XXXXXXX","2PUVW*XXXXX","2PUVW*XXXXXX","2PUVW*XXXXXXX","2PUW*XXXXXX","2PUW*XXXXXXX","2QUVVW*X*","2RUVVW*X*","3PUVVW*XXXX","3PUVVW*XXXXX","3PUVVW*XXXXXX","3PUVW*XXXXX","3PUVW*XXXXXX","3PUW*XXXXXX","3PVVW*XXXXX","3PVVW*XXXXXX","3PVVW*XXXXXXX","3QUVVW*X*","3RUVVW*X*","4PUVVW*XXXX","4PUVVW*XXXXX","4PUVW*XXXXX","4PVVW*XXXXX","4PVVW*XXXXXX","4PVW*XXXXXX","4QUVVW*X*","4RUVVW*X*","5PUVVW*XXXX","5PVVW*XXXXX","5QUVVW*X*","5RUVVW*X*","6PTUVVWWWWWX","6PTUVVWWWWX","6PTUVWWWWWX","6QTW*XXXXXX","6QTW*XXXXXXX","6QUVVW*X*","6RUVVW*X*","7PTUVVWWWWX","7QTW*XXXXXX","7QUVVW*XXXX","7QUVVW*XXXXX","7QUVVW*XXXXXX","7QUVVW*XXXXXXX","7QUVVW*XXXXXXXX","7RUVVW*X*","8QUVVW*XXXX","8QUVVW*XXXXX","8QUVVW*XXXXXX","8QUVVW*XXXXXXX","8QUVW*XXXXX","8QUVW*XXXXXX","8QUVW*XXXXXXX","8RUVVW*X*","9QUVVW*XXXX","9QUVVW*XXXXX","9QUVVW*XXXXXX","9QUVW*XXXXX","9QUVW*XXXXXX","9QUW*XXXXXX","9RUVVW*X*","AQUVVW*XXXX","AQUVVW*XXXXX","AQUVW*XXXXX","AQVVW*XXXXX","AQVVW*XXXXXX","ARUVVW*X*","BQUVVW*XXXX","BQVVW*XXXXX","BRUVVW*X*","CQTUVVWWWWX","CRUVVW*X*","DRUVVW*XXXX","DRUVVW*XXXXX","DRUVVW*XXXXXX","DRUVVW*XXXXXXX","ERUVVW*XXXX","ERUVVW*XXXXX","ERUVVW*XXXXXX","ERUVW*XXXXX","ERUVW*XXXXXX","FRUVVW*XXXX","FRUVVW*XXXXX","FRUVW*XXXXX","GRUVVW*XXXX","GRVVW*XXXXX","JSUVW*XXXXX"};
string s34[] = {"111111111112X*","11111111111X*","11111111112X*","1111111111X*","1111111112X*","111111111WX*","111111111X*","111111112WWX*","111111112WX*","111111112X*","11111111VWW","11111111WWWX*","11111111WWX*","11111111WX*","11111112WWX*","11111112WX*","1111111VWWW","1111111WWWX*","1111111WWX*","1111112WWWWX*","1111112WWWX*","1111112WWX*","111111RXXXX","111111VWWWW","111111WWWWWX*","111111WWWWX*","111111WWWX*","1111122WWX*","111112WWWWWX*","111112WWWWX*","111112WWWX*","11111VWWWWW","11111WWWWWWX*","11111WWWWWX*","11111WWWWX*","11112WWWWWWX*","11112WWWWWX*","11112WWWWX*","1111VWWWWWW","1111WWWWWWX*","1111WWWWWX*","1112WWWWWWWX*","1112WWWWWWX*","1112WWWWWX*","111WWWWWWWWX*","111WWWWWWWX*","111WWWWWWX*","11222WWWWX*","1122WWWWWWX*","1122WWWWWX*","112WWWWWWWWX*","112WWWWWWWX*","112WWWWWWX*","113WWWWWWX*","11VVVVWWWWW","11VWWWWWWWW","11WWWWWWWWX*","11WWWWWWWX*","122WWWWWWX*","12WWWWWWWWX*","12WWWWWWWX*","13VVWWWWWX*","13VWWWWWWWWWX*","13VWWWWWWWWX*","13VWWWWWWWX*","13VWWWWWWX*","13WWWWWWWWWX*","13WWWWWWWWX*","13WWWWWWWX*","14PVVXXXXXX","14UWWWWWWWWX*","14UWWWWWWWX*","14UWWWWWWX*","14VVWWWWWX*","14VWWWWWWX*","14WWWWWWWWWX*","14WWWWWWWWX*","14WWWWWWWX*","15UVVWWWXXX","15VVWWWWWX*","16VWWWWWWX*","16WWWWWWWWX*","16WWWWWWWX*","17VVWWWWWX*","17WWWWWWWWX*","17WWWWWWWX*","222WWWWWWX*","24VWWWWWWWX*","24VWWWWWWX*","24WWWWWWWX*","33WWWWWWWWX*","33WWWWWWWX*","4JVXXXXXXXX","7RSVXXXXXXX","7RSVXXXXXXXX","8RSVXXXXXXX","BHXXXXXXXXX","DSSWWXXXXXX"};
string s35[] = {"1111111111111Y","111111111111Y","111111111112X","11111111111X","11111111111XY","11111111111Y","11111111112X","1111111111X","1111111111XX","1111111111XXY","1111111111XY","1111111111Y","1111111112X","111111111W","111111111XXXY*","111111111XXY*","111111111XY*","111111111Y*","111111112WW","11111111XXXXY*","11111111XXXY*","11111111XXY*","11111111XY*","111111122Y*","11111112XXY*","11111112XY*","1111111XXXXXY*","1111111XXXXY*","1111111XXXY*","1111111XXY*","11111122XY*","1111112XXY*","111111SYYYY","111111WXXXX","111111XXXXXXY*","111111XXXXXY*","111111XXXXY*","111111XXXY*","1111122XXY*","11111XXXXXXXY*","11111XXXXXXY*","11111XXXXXY*","11111XXXXY*","111122XXXXY*","111122XXXY*","11112XXXXXXY*","11112XXXXXY*","11112XXXXY*","1111MYYYYYY","1111MYYYYYYY","1111MYYYYYYYY","1111XXXXXXXXY*","1111XXXXXXXY*","1111XXXXXXY*","1111XXXXXY*","11122XXXXY*","1112XXXXXXY*","1112XXXXXY*","111MXYYYYYY","111MXYYYYYYY","111MXYYYYYYYY","111MYYYYYYY","111MYYYYYYYY","111XXXXXXXXXY*","111XXXXXXXXY*","111XXXXXXXY*","111XXXXXXY*","1122XXXXXXY*","1122XXXXXY*","1123XXXXXY*","112WWXXXXXX","112XXXXXXY*","11MXXXYYYYY","11MXXXYYYYYY","11MXXXYYYYYYY","11MXXXYYYYYYYY","11MXXYYYYYY","11MXXYYYYYYY","11MXXYYYYYYYY","11MXYYYYYYY","11MXYYYYYYYY","11MYYYYYYYY","11QUXXYYYYY","11QUXXYYYYYY","11QUXXYYYYYYY","11QUXYYYYYY","11QUXYYYYYYY","11QUYYYYYYY","11XXXXXXXXXXY*","11XXXXXXXXXY*","11XXXXXXXXY*","11XXXXXXXY*","1224XXXXXY*","122XXXXXXY*","123XXXXXXY*","124XXXXXXY*","125XXXXXXY*","12VWWXXXXXX","12WWXXXXXXY","12WXXXXXXY*","13WXXXXXXY*","13XXXXXXXXXXXY*","13XXXXXXXXXXY*","13XXXXXXXXXY*","13XXXXXXXXY*","13XXXXXXXY*","14QWWYYYYYY","14QWWYYYYYYY","14VXXXXXXY*","14WWXXXXXXXY*","14WWXXXXXXY*","14WWXXXXXY*","14WXXXXXXXY*","14WXXXXXXY*","14XXXXXXXXY*","14XXXXXXXY*","15VWXXXXXXY*","15VWXXXXXY*","15VXXXXXXY*","15WXXXXXXXY*","15WXXXXXXY*","15XXXXXXXY*","16UXXXXXXYY","16VXXXXXXY*","16XXXXXXXY*","17WXXXXXXY*","17XXXXXXXY*","18VXXXXXXY*","18WXXXXXXY*","1PUVWWXXXXXY","1PUVWWXXXXY","1PUVWXXXXXY","1PUWWXXXXXY","1QUWX*YYYYY","1QUWX*YYYYYY","1QUWX*YYYYYYY","1QUX*YYYYYY","1QUX*YYYYYYY","1QVWWX*YYYY","1QVWWX*YYYYY","1QVWWX*YYYYYY","1QVWWX*YYYYYYY","1QVWWX*YYYYYYYY","1QVWWX*YYYYYYYYY","1RVWWX*Y*","1SVWWX*Y*","22WXXXXXXXX","22XXXXXXXXY*","22XXXXXXXY*","23XXXXXXXY*","24WXXXXXXY*","24XXXXXXXY*","25VXXXXXXY*","25WXXXXXXY*","2PUVWWXXXXY","2QUWX*YYYYY","2QUWX*YYYYYY","2QUX*YYYYYY","2QVWWX*YYYY","2QVWWX*YYYYY","2QVWWX*YYYYYY","2QVWWX*YYYYYYY","2QVWWX*YYYYYYYY","2QVWX*YYYYY","2QVWX*YYYYYY","2QVWX*YYYYYYY","2QVWX*YYYYYYYY","2RVWWX*Y*","2SVWWX*Y*","3QUWX*YYYYY","3QVWWX*YYYY","3QVWWX*YYYYY","3QVWWX*YYYYYY","3QVWWX*YYYYYYY","3QVWX*YYYYY","3QVWX*YYYYYY","3QVWX*YYYYYYY","3QVX*YYYYYY","3QVX*YYYYYYY","3RVWWX*Y*","3SVWWX*Y*","4QVWWX*YYYY","4QVWWX*YYYYY","4QVWWX*YYYYYY","4QVWX*YYYYY","4QVWX*YYYYYY","4QVX*YYYYYY","4QWWX*YYYYY","4QWWX*YYYYYY","4QWWX*YYYYYYY","4RVWWX*Y*","4SVWWX*Y*","5KWYYYYYYYY","5QVWWX*YYYY","5QVWWX*YYYYY","5QVWX*YYYYY","5QWWX*YYYYY","5QWWX*YYYYYY","5QWX*YYYYYY","5RVWWX*Y*","5SVWWX*Y*","6QVWWX*YYYY","6QWWX*YYYYY","6RVWWX*Y*","6SVWWX*Y*","7QUVWWXXXXXY","7QUVWWXXXXY","7QUVWXXXXXY","7RUX*YYYYYY","7RUX*YYYYYYY","7RVWWX*Y*","7SVWWX*Y*","8QUVWWXXXXY","8RUX*YYYYYY","8RVWWX*YYYY","8RVWWX*YYYYY","8RVWWX*YYYYYY","8RVWWX*YYYYYYY","8RVWWX*YYYYYYYY","8STWYYYYYYY","8STWYYYYYYYY","8SVWWX*Y*","9RVWWX*YYYY","9RVWWX*YYYYY","9RVWWX*YYYYYY","9RVWWX*YYYYYYY","9RVWX*YYYYY","9RVWX*YYYYYY","9RVWX*YYYYYYY","9STWYYYYYYY","9SVWWX*Y*","ARVWWX*YYYY","ARVWWX*YYYYY","ARVWWX*YYYYYY","ARVWX*YYYYY","ARVWX*YYYYYY","ARVX*YYYYYY","ASVWWX*Y*","BRVWWX*YYYY","BRVWWX*YYYYY","BRVWX*YYYYY","BRWWX*YYYYY","BRWWX*YYYYYY","BSVWWX*Y*","CIYYYYYYYYY","CRVWWX*YYYY","CRWWX*YYYYY","CSVWWX*Y*","DRUVWWXXXXY","DSVWWX*Y*","ESVWWX*YYYY","ESVWWX*YYYYY","ESVWWX*YYYYYY","ESVWWX*YYYYYYY","ETTXXYYYYYY","FSVWWX*YYYY","FSVWWX*YYYYY","FSVWWX*YYYYYY","FSVWX*YYYYY","FSVWX*YYYYYY","GSVWWX*YYYY","GSVWWX*YYYYY","GSVWX*YYYYY","HSVWWX*YYYY","HSWWX*YYYYY","KTVWX*YYYYY"};
string s36[] = {"1111111111111Y","111111111111Y","111111111112X","11111111111X","11111111111Y","11111111112X","11111111112Z*","1111111111X","1111111111YZ*","1111111111Z*","1111111112X","1111111112Z*","111111111W","111111111X","111111111YYZ*","111111111YZ*","111111111Z*","111111112Z*","11111111XYY","11111111YYZ*","11111111YZ*","111111122YY","11111112YYZ*","11111112YZ*","1111111YYZ*","1111112YYYYZ*","1111112YYYZ*","1111112YYZ*","111111TZZZZ","111111XYYYY","111111YYYYYYZ*","111111YYYYYZ*","111111YYYYZ*","111111YYYZ*","111112YYYYZ*","111112YYYZ*","11111YYYYYYZ*","11111YYYYYZ*","11111YYYYZ*","11112YYYYYYZ*","11112YYYYYZ*","11112YYYYZ*","1111XYYYYYY","1111YYYYYYZ*","1111YYYYYZ*","11122YYYYZ*","1112YYYYYYZ*","1112YYYYYZ*","111QYYYZZZZ","111YYYYYYZ*","112YYYYYYYYZ*","112YYYYYYYZ*","112YYYYYYZ*","113YYYYYYYZ*","113YYYYYYZ*","11RVYYZZZZZ","11RVYYZZZZZZ","11RVYYZZZZZZZ","11RVYYZZZZZZZZ","11RVYZZZZZZ","11RVYZZZZZZZ","11RVYZZZZZZZZ","11RVZZZZZZZ","11RVZZZZZZZZ","11XXYYYYYYY","11XXYYYYYYYY","11XXYYYYYYYYY","11XYYYYYYYY","11XYYYYYYYYY","11YYYYYYYYYZ*","11YYYYYYYYZ*","11YYYYYYYZ*","1222YYYYYZ*","1233YYYYYZ*","123YYYYYYZ*","124YYYYYYZ*","12RVXZZZZZZ","12RVXZZZZZZZ","12RVZZZZZZZ","12XYYYYYYYYZ*","12XYYYYYYYZ*","12XYYYYYYZ*","12YYYYYYYYZ*","12YYYYYYYZ*","133YYYYYYZ*","13NXZZZZZZZ","13WWYYYYYYY","13WYYYYYYYZ","13YYYYYYYYYZ*","13YYYYYYYYZ*","13YYYYYYYZ*","14XYYYYYYYYYZ*","14XYYYYYYYYZ*","14XYYYYYYYZ*","14XYYYYYYZ*","14YYYYYYYYYZ*","14YYYYYYYYZ*","14YYYYYYYZ*","15RWYZZZZZZ","15WYYYYYYYYZ*","15WYYYYYYYZ*","15WYYYYYYZ*","15XXYYYYYZ*","15XYYYYYYZ*","15YYYYYYYYYZ*","15YYYYYYYYZ*","15YYYYYYYZ*","16WXXYYYYZ*","16XXYYYYYZ*","17VXYYYYZZZ","17YYYYYYYYYZ*","17YYYYYYYYZ*","17YYYYYYYZ*","18YYYYYYYYZ*","18YYYYYYYZ*","1PUVWWXXXXXY","1PUVWWXXXXY","1PUVWXXXXXY","1PUWWXXXXXY","1QUWX*YYYYY","1QUWX*YYYYYY","1QUWX*YYYYYYY","1QUX*YYYYYY","1QUX*YYYYYYY","1QVWWX*YYYY","1QVWWX*YYYYY","1QVWWX*YYYYYY","1QVWWX*YYYYYYY","1QVWWX*YYYYYYYY","1QVWWX*YYYYYYYYY","1QVWXXYYYYYYZ","1QVWXXYYYYYZ","1QVWXXYYYYZ","1QVWXYYYYYYZ","1QVWXYYYYYZ","1QVWYYYYYYZ","1RVWWX*Y*","1RVXY*ZZZZZ","1RVXY*ZZZZZZ","1RVXY*ZZZZZZZ","1RVXY*ZZZZZZZZ","1RVY*ZZZZZZ","1RVY*ZZZZZZZ","1RVY*ZZZZZZZZ","1RWXXY*Z*","1SVWWX*Y*","1SWXXY*Z*","1TWXXY*Z*","222YYYYYYZ*","22YYYYYYYYZ*","22YYYYYYYZ*","23XYYYYYYZ*","24YYYYYYYYZ*","24YYYYYYYZ*","25YYYYYYYYZ*","25YYYYYYYZ*","26YYYYYYYZ*","2PUVWWXXXXY","2QUWX*YYYYY","2QUWX*YYYYYY","2QUX*YYYYYY","2QVWWX*YYYY","2QVWWX*YYYYY","2QVWWX*YYYYYY","2QVWWX*YYYYYYY","2QVWWX*YYYYYYYY","2QVWX*YYYYY","2QVWX*YYYYYY","2QVWX*YYYYYYY","2QVWX*YYYYYYYY","2QVWXXYYYYYZ","2QVWXXYYYYZ","2QVWXYYYYYZ","2QVXXYYYYYZ","2RVWWX*Y*","2RVXY*ZZZZZ","2RVXY*ZZZZZZ","2RVXY*ZZZZZZZ","2RVY*ZZZZZZ","2RVY*ZZZZZZZ","2RWXXY*ZZZZ","2RWXXY*ZZZZZ","2RWXXY*ZZZZZZ","2RWXXY*ZZZZZZZ","2RWXXY*ZZZZZZZZ","2RWXXY*ZZZZZZZZZ","2SVWWX*Y*","2SWXXY*Z*","2TWXXY*Z*","33YYYYYYYYZ*","33YYYYYYYZ*","3QUWX*YYYYY","3QVWWX*YYYY","3QVWWX*YYYYY","3QVWWX*YYYYYY","3QVWWX*YYYYYYY","3QVWX*YYYYY","3QVWX*YYYYYY","3QVWX*YYYYYYY","3QVWXXYYYYZ","3QVX*YYYYYY","3QVX*YYYYYYY","3RVWWX*Y*","3RVXY*ZZZZZ","3RVXY*ZZZZZZ","3RVY*ZZZZZZ","3RWXXY*ZZZZ","3RWXXY*ZZZZZ","3RWXXY*ZZZZZZ","3RWXXY*ZZZZZZZ","3RWXXY*ZZZZZZZZ","3RWXY*ZZZZZ","3RWXY*ZZZZZZ","3RWXY*ZZZZZZZ","3RWXY*ZZZZZZZZ","3SVWWX*Y*","3SWXXY*Z*","3TWXXY*Z*","4QVWWX*YYYY","4QVWWX*YYYYY","4QVWWX*YYYYYY","4QVWX*YYYYY","4QVWX*YYYYYY","4QVX*YYYYYY","4QWWX*YYYYY","4QWWX*YYYYYY","4QWWX*YYYYYYY","4RVWWX*Y*","4RVXY*ZZZZZ","4RWXXY*ZZZZ","4RWXXY*ZZZZZ","4RWXXY*ZZZZZZ","4RWXXY*ZZZZZZZ","4RWXY*ZZZZZ","4RWXY*ZZZZZZ","4RWXY*ZZZZZZZ","4RWY*ZZZZZZ","4RWY*ZZZZZZZ","4SVWWX*Y*","4SWXXY*Z*","4TWXXY*Z*","5QVWWX*YYYY","5QVWWX*YYYYY","5QVWX*YYYYY","5QWWX*YYYYY","5QWWX*YYYYYY","5QWX*YYYYYY","5RVWWX*Y*","5RWXXY*ZZZZ","5RWXXY*ZZZZZ","5RWXXY*ZZZZZZ","5RWXY*ZZZZZ","5RWXY*ZZZZZZ","5RWY*ZZZZZZ","5RXXY*ZZZZZ","5RXXY*ZZZZZZ","5RXXY*ZZZZZZZ","5SVWWX*Y*","5SWXXY*Z*","5TWXXY*Z*","6LXZZZZZZZZ","6QVWWX*YYYY","6QWWX*YYYYY","6RVWWX*Y*","6RWXXY*ZZZZ","6RWXXY*ZZZZZ","6RWXY*ZZZZZ","6RXXY*ZZZZZ","6RXXY*ZZZZZZ","6RXY*ZZZZZZ","6SVWWX*Y*","6SWXXY*Z*","6TWXXY*Z*","7QUVWWXXXXXY","7QUVWWXXXXY","7QUVWXXXXXY","7RUX*YYYYYY","7RUX*YYYYYYY","7RVWWX*Y*","7RWXXY*ZZZZ","7RXXY*ZZZZZ","7SVWWX*Y*","7SWXXY*Z*","7TWXXY*Z*","8QUVWWXXXXY","8RUX*YYYYYY","8RVWWX*YYYY","8RVWWX*YYYYY","8RVWWX*YYYYYY","8RVWWX*YYYYYYY","8RVWWX*YYYYYYYY","8RVWXXYYYYYZ","8RVWXXYYYYZ","8RVWXYYYYYZ","8SVWWX*Y*","8SVY*ZZZZZZ","8SVY*ZZZZZZZ","8SWXXY*Z*","8TWXXY*Z*","9RVWWX*YYYY","9RVWWX*YYYYY","9RVWWX*YYYYYY","9RVWWX*YYYYYYY","9RVWX*YYYYY","9RVWX*YYYYYY","9RVWX*YYYYYYY","9RVWXXYYYYZ","9SVWWX*Y*","9SVY*ZZZZZZ","9SWXXY*ZZZZ","9SWXXY*ZZZZZ","9SWXXY*ZZZZZZ","9SWXXY*ZZZZZZZ","9SWXXY*ZZZZZZZZ","9TUXZZZZZZZ","9TUXZZZZZZZZ","9TWXXY*Z*","ARVWWX*YYYY","ARVWWX*YYYYY","ARVWWX*YYYYYY","ARVWX*YYYYY","ARVWX*YYYYYY","ARVX*YYYYYY","ASVWWX*Y*","ASWXXY*ZZZZ","ASWXXY*ZZZZZ","ASWXXY*ZZZZZZ","ASWXXY*ZZZZZZZ","ASWXY*ZZZZZ","ASWXY*ZZZZZZ","ASWXY*ZZZZZZZ","ATUXZZZZZZZ","ATWXXY*Z*","BRVWWX*YYYY","BRVWWX*YYYYY","BRVWX*YYYYY","BRWWX*YYYYY","BRWWX*YYYYYY","BSVWWX*Y*","BSWXXY*ZZZZ","BSWXXY*ZZZZZ","BSWXXY*ZZZZZZ","BSWXY*ZZZZZ","BSWXY*ZZZZZZ","BSWY*ZZZZZZ","BTWXXY*Z*","CRVWWX*YYYY","CRWWX*YYYYY","CSVWWX*Y*","CSWXXY*ZZZZ","CSWXXY*ZZZZZ","CSWXY*ZZZZZ","CSXXY*ZZZZZ","CSXXY*ZZZZZZ","CTWXXY*Z*","DJZZZZZZZZZ","DRUVWWXXXXY","DSVWWX*Y*","DSWXXY*ZZZZ","DSXXY*ZZZZZ","DTWXXY*Z*","ESVWWX*YYYY","ESVWWX*YYYYY","ESVWWX*YYYYYY","ESVWWX*YYYYYYY","ESVWXXYYYYZ","ETWXXY*Z*","FSVWWX*YYYY","FSVWWX*YYYYY","FSVWWX*YYYYYY","FSVWX*YYYYY","FSVWX*YYYYYY","FTWXXY*ZZZZ","FTWXXY*ZZZZZ","FTWXXY*ZZZZZZ","FTWXXY*ZZZZZZZ","FUUYYZZZZZZ","GSVWWX*YYYY","GSVWWX*YYYYY","GSVWX*YYYYY","GTWXXY*ZZZZ","GTWXXY*ZZZZZ","GTWXXY*ZZZZZZ","GTWXY*ZZZZZ","GTWXY*ZZZZZZ","HSVWWX*YYYY","HSWWX*YYYYY","HTWXXY*ZZZZ","HTWXXY*ZZZZZ","HTWXY*ZZZZZ","ITWXXY*ZZZZ","ITXXY*ZZZZZ","KTVWX*YYYYY","LUWXY*ZZZZZ"};
string sex28[] = {"1*R","1*RR"};
int sex28len = sizeof(sex28) / sizeof(string);
string sex29[] = {"1*R"};
int sex29len = sizeof(sex29) / sizeof(string);
string sex30[] = {"1*R"};
int sex30len = sizeof(sex30) / sizeof(string);
string sex31[] = {"1*R","11T*","11T*U","11T*U*","11T*UU","11T*UUU","11T*UUUU","11T*UUUUU","11T*UUUUUU"};
int sex31len = sizeof(sex31) / sizeof(string);
string sex32[] = {"1*R","1*V*","1*V","1*VV","1*VVV","1*VVVV","1*VVVVV","1*VVVVVV","1*VVVVVVV","1*VVVVVVVV","1*VVVVVVVV"};
int sex32len = sizeof(sex32) / sizeof(string);
string sex33[] = {"12V*W*","12V*","12V*W","12V*WW","12V*WWW","12V*WWWW","12V*WWWWW","12V*WWWWWW","22V*W*","22V*","22V*W","22V*WW","22V*WWW","22V*WWWW","22V*WWWWW","22V*WWWWWW","AGW*"};
int sex33len = sizeof(sex33) / sizeof(string);
string sex34[] = {"13VW*X*","13VW*","13VW*X","13VW*XX","13VW*XXX","13VW*XXXX","13VW*XXXXX","13W*X*", "13W*","13W*X","13W*XX","13W*XXX","13W*XXXX","13W*XXXXX","13W*XXXXXX","14W*X*","14W*","14W*X","14W*XX","14W*XXX","14W*XXXX","14W*XXXXX","14W*XXXXXX","BHX*"};
int sex34len = sizeof(sex34) / sizeof(string);
string sex35[] = {"111X*","111X*Y","111X*Y*","111X*YY","111X*YYY","111X*YYYY","111X*YYYYY","11X*","11X*Y","11X*Y*","11X*YY","11X*YYY","11X*YYYY","11X*YYYYY","11X*YYYYYY","13X*","13X*Y","13X*Y*","13X*YY","13X*YYY","13X*YYYY","13X*YYYYY","13X*YYYYYY","1QVWWXXXY*","1QVWWXXY*","1QVWWXY*","1QVWWY*","CIY*"};
int sex35len = sizeof(sex35) / sizeof(string);
string sex36[] = {"11XXY*","11XY*","11Y*","11Y*Z","11Y*Z*","11Y*ZZ","11Y*ZZZ","11Y*ZZZZ","11Y*ZZZZZ","11Y*ZZZZZZ","13Y*","13Y*Z","13Y*Z*","13Y*ZZ","13Y*ZZZ","13Y*ZZZZ","13Y*ZZZZZ","13Y*ZZZZZZ","14XY*","14XY*Z","14XY*Z*","14XY*ZZ","14XY*ZZZ","14XY*ZZZZ","14XY*ZZZZZ","14Y*","14Y*Z","14Y*Z*","14Y*ZZ","14Y*ZZZ","14Y*ZZZZ","14Y*ZZZZZ","14Y*ZZZZZZ","15Y*","15Y*Z","15Y*Z*","15Y*ZZ","15Y*ZZZ","15Y*ZZZZ","15Y*ZZZZZ","15Y*ZZZZZZ","17Y*","17Y*Z","17Y*Z*","17Y*ZZ","17Y*ZZZ","17Y*ZZZZ","17Y*ZZZZZ","17Y*ZZZZZZ","1QVWWXXXY*","1QVWWXXY*","1QVWWXY*","1QVWWY*","2RWXXYYYZ*","2RWXXYYZ*","2RWXXYZ*","2RWXXZ*","DJZ*"};
int sex36len = sizeof(sex36) / sizeof(string);

void addArr(vector<string> &v, string *ps,int cnt)
{
    for (int i=0;i<cnt;i++)
        v.push_back(ps[i]);
}
#define ADDARR(x) if (k == x) addArr(pv,s##x,sizeof(s##x)/sizeof(string));

vector<string> real_solution (int N)
{

    vector<string> vSex36;
    for (int i=0;i<sex36len;i++)
        vSex36.push_back(sex36[i]);


    int k = N;
    int v1,v2;
    if (k < 33)
    {
        v1 = 25;
        v2 = 9;
    }
    else
    {
        v1 = 23;
        v2 = 8;
    }
    int t1 = (k-1)*v1;
    int t2 = (k-1)*(k-1)*v1;
    for (int i=0;i<=t1;i++)
        for (int j=0;j<=t2;j++)
            elemCost[i][j] = 120;

    vPrev.push_back("");
    s1.push_back(make_pair(0,0));
    elemCost[0][0] = 0;
    v.reserve(400000);
    for (int i=1;i<v1;i++)
    {
        fillCur(k);

        for (int j=0;j<(int)vCur.size();j++)
        {
            string s = vCur[j];
            int cnt1[40] = {0};
            for (int i=0;i<(int)s.length();i++)
                if (s[i] >= 'A')
                    ++cnt1[s[i]- 'A' + 10];
                else
                    ++cnt1[s[i]- '0'];
            bool f2 = false;
            for (int i=0;i<36;i++)
            {
                if (cnt1[i] > v2+1)
                    f2 = true;
                patbuf[i] = (cnt1[i] > v2) ? -1 : cnt1[i];
            }
            if (f2) continue;
            s = patbufs(40);
            if (s.length() < 11)
            {
                bool fl = false;
                if (k == 28)
                    for (int f=0;f<sex28len;f++)
                        if (sex28[f] == s)
                            fl = true;
                if (k == 29)
                    for (int f=0;f<sex29len;f++)
                        if (sex29[f] == s)
                            fl = true;
                if (k == 30)
                    for (int f=0;f<sex30len;f++)
                        if (sex30[f] == s)
                            fl = true;
                if (k == 31)
                    for (int f=0;f<sex31len;f++)
                        if (sex31[f] == s)
                            fl = true;
                if (k == 32)
                    for (int f=0;f<sex32len;f++)
                        if (sex32[f] == s)
                            fl = true;
                if (k >= 33)
                    if (s[0] == '1' && s[1] == '*')
                        fl = true;
                if (k == 33)
                    for (int f=0;f<sex33len;f++)
                        if (sex33[f] == s)
                            fl = true;
                if (k == 34)
                    if (s[0] == '1' || s[0] == 'B')
                        for (int f=0;f<sex34len;f++)
                            if (sex34[f] == s)
                                fl = true;
                if (k == 35)
                    if (s[0] == '1' || s[0] == 'C')
                        for (int f=0;f<sex35len;f++)
                            if (sex35[f] == s)
                                fl = true;
                if (k == 36)
                    if (s[0] == '1' || s[0] == '2' || s[0] == 'D')
                        if (binary_search(vSex36.begin(), vSex36.end(),s))
                                    fl = true;

                if (!fl)
                    v.push_back(s);
            }
        }
        if (vCurCnt != (int)vCur.size())
            throw 0;
        vPrev.swap(vCur);
        vCurCnt = 0;
        s1.swap(s2);
        s2.clear();
        vCur.reserve(150000);
        s2.reserve(150000);
    }
    vPrev.clear();
    vCur.clear();
    s1.clear();
    s2.clear();
    pv.swap(v);
    ADDARR(16);ADDARR(17);ADDARR(18);ADDARR(19);ADDARR(20);ADDARR(21);ADDARR(22);ADDARR(23);ADDARR(24);ADDARR(25);ADDARR(26);ADDARR(27);ADDARR(28);ADDARR(29);ADDARR(30);ADDARR(31);ADDARR(32);ADDARR(33);ADDARR(34);ADDARR(35);ADDARR(36);
    if (k == 32 || k == 33 || k == 34 || k == 35 || k == 36)
        addArr(pv,s3236,sizeof(s3236)/sizeof(string));
    if (k == 33 || k == 34 || k == 35 || k == 36)
        addArr(pv,s3336,sizeof(s3336)/sizeof(string));
    if (k == 34 || k == 35 || k == 36)
        addArr(pv,s3436,sizeof(s3436)/sizeof(string));
    sort(pv.rbegin(),pv.rend());
    clearPat(pv);
    sort(pv.begin(),pv.end());

    return pv;
}

}
